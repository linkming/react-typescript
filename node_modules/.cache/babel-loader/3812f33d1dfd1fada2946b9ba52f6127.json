{"ast":null,"code":"const Shape = require('../shape');\n\nconst bbox = require('../util/bbox');\n\nclass Sector extends Shape {\n  _initProperties() {\n    super._initProperties();\n\n    this._attrs.canFill = true;\n    this._attrs.canStroke = true;\n    this._attrs.type = 'sector';\n  }\n\n  getDefaultAttrs() {\n    return {\n      x: 0,\n      y: 0,\n      lineWidth: 0,\n      r: 0,\n      r0: 0,\n      startAngle: 0,\n      endAngle: Math.PI * 2,\n      anticlockwise: false\n    };\n  }\n\n  createPath(context) {\n    const attrs = this.get('attrs');\n    const {\n      x,\n      y,\n      startAngle,\n      endAngle,\n      r,\n      r0,\n      anticlockwise\n    } = attrs;\n    context.beginPath();\n    const unitX = Math.cos(startAngle);\n    const unitY = Math.sin(startAngle);\n    context.moveTo(unitX * r0 + x, unitY * r0 + y);\n    context.lineTo(unitX * r + x, unitY * r + y); // 当扇形的角度非常小的时候，就不进行弧线的绘制；或者整个只有1个扇形时，会出现end<0的情况不绘制\n\n    if (Math.abs(endAngle - startAngle) > 0.0001 || startAngle === 0 && endAngle < 0) {\n      context.arc(x, y, r, startAngle, endAngle, anticlockwise);\n      context.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n      if (r0 !== 0) {\n        context.arc(x, y, r0, endAngle, startAngle, !anticlockwise);\n      }\n    }\n\n    context.closePath();\n  }\n\n  calculateBox() {\n    const attrs = this.get('attrs');\n    const {\n      x,\n      y,\n      r,\n      r0,\n      startAngle,\n      endAngle,\n      anticlockwise\n    } = attrs;\n    const outerBBox = bbox.getBBoxFromArc(x, y, r, startAngle, endAngle, anticlockwise);\n    const innerBBox = bbox.getBBoxFromArc(x, y, r0, startAngle, endAngle, anticlockwise);\n    return {\n      minX: Math.min(outerBBox.minX, innerBBox.minX),\n      minY: Math.min(outerBBox.minY, innerBBox.minY),\n      maxX: Math.max(outerBBox.maxX, innerBBox.maxX),\n      maxY: Math.max(outerBBox.maxY, innerBBox.maxY)\n    };\n  }\n\n}\n\nShape.Sector = Sector;\nmodule.exports = Sector;","map":{"version":3,"sources":["/home/sunxuming/react-typescript/node_modules/_@antv_f2@3.6.0-alpha.2@@antv/f2/src/graphic/shape/sector.js"],"names":["Shape","require","bbox","Sector","_initProperties","_attrs","canFill","canStroke","type","getDefaultAttrs","x","y","lineWidth","r","r0","startAngle","endAngle","Math","PI","anticlockwise","createPath","context","attrs","get","beginPath","unitX","cos","unitY","sin","moveTo","lineTo","abs","arc","closePath","calculateBox","outerBBox","getBBoxFromArc","innerBBox","minX","min","minY","maxX","max","maxY","module","exports"],"mappings":"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","sourcesContent":["const Shape = require('../shape');\nconst bbox = require('../util/bbox');\n\nclass Sector extends Shape {\n  _initProperties() {\n    super._initProperties();\n    this._attrs.canFill = true;\n    this._attrs.canStroke = true;\n    this._attrs.type = 'sector';\n  }\n\n  getDefaultAttrs() {\n    return {\n      x: 0,\n      y: 0,\n      lineWidth: 0,\n      r: 0,\n      r0: 0,\n      startAngle: 0,\n      endAngle: Math.PI * 2,\n      anticlockwise: false\n    };\n  }\n\n  createPath(context) {\n    const attrs = this.get('attrs');\n    const { x, y, startAngle, endAngle, r, r0, anticlockwise } = attrs;\n    context.beginPath();\n    const unitX = Math.cos(startAngle);\n    const unitY = Math.sin(startAngle);\n\n    context.moveTo(unitX * r0 + x, unitY * r0 + y);\n    context.lineTo(unitX * r + x, unitY * r + y);\n\n    // 当扇形的角度非常小的时候，就不进行弧线的绘制；或者整个只有1个扇形时，会出现end<0的情况不绘制\n    if (Math.abs(endAngle - startAngle) > 0.0001 || startAngle === 0 && endAngle < 0) {\n      context.arc(x, y, r, startAngle, endAngle, anticlockwise);\n      context.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n      if (r0 !== 0) {\n        context.arc(x, y, r0, endAngle, startAngle, !anticlockwise);\n      }\n    }\n    context.closePath();\n  }\n\n  calculateBox() {\n    const attrs = this.get('attrs');\n    const { x, y, r, r0, startAngle, endAngle, anticlockwise } = attrs;\n    const outerBBox = bbox.getBBoxFromArc(x, y, r, startAngle, endAngle, anticlockwise);\n    const innerBBox = bbox.getBBoxFromArc(x, y, r0, startAngle, endAngle, anticlockwise);\n    return {\n      minX: Math.min(outerBBox.minX, innerBBox.minX),\n      minY: Math.min(outerBBox.minY, innerBBox.minY),\n      maxX: Math.max(outerBBox.maxX, innerBBox.maxX),\n      maxY: Math.max(outerBBox.maxY, innerBBox.maxY)\n    };\n  }\n}\n\nShape.Sector = Sector;\nmodule.exports = Sector;\n\n"]},"metadata":{},"sourceType":"script"}