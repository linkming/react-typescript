{"ast":null,"code":"var _jsxFileName = \"/home/sunxuming/react-typescript/src/views/home/index.tsx\";\nimport React, { Component } from 'react';\nimport './index.scss';\nimport http from './../../api/index';\nimport { Input, Radio, message } from 'antd';\nexport default class Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      songs: '',\n      searchType: '搜索歌名',\n      size: 'default',\n      data: []\n    };\n\n    this.onChange = e => {\n      const str = e.target.value;\n      this.setState(() => {\n        return {\n          songs: str\n        };\n      });\n    };\n\n    this.onBlur = () => {\n      http.searchSongsBySinger(this.state.songs).then(res => {\n        console.log(res);\n\n        if (res.status === 200) {\n          const {\n            data\n          } = res;\n\n          if (data.statusCode === 200) {\n            this.setState(() => {\n              return {\n                data: JSON.parse(data.body).data.album.list\n              };\n            });\n          } else {\n            message.error(data.errMessage, 10);\n          }\n\n          console.log(this.state.data);\n        } else {}\n      });\n    };\n  }\n\n  // constructor(props:Object){\n  //     super(props)\n  // }\n  componentDidMount() {// console.log(http)\n  }\n\n  handleSizeChange(event) {\n    this.setState(() => {\n      return {\n        searchType: event.target.value\n      };\n    });\n\n    if (this.state.songs) {\n      if (event.target.value === '搜索歌手') {\n        this.onBlur();\n      } else {}\n    }\n  }\n\n  serchSongs() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"search-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Input, {\n      size: \"default\",\n      value: this.state.songs,\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u6B4C\\u66F2\\u540D\\u79F0\",\n      onChange: this.onChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Radio.Group, {\n      value: this.state.searchType,\n      onChange: this.handleSizeChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Radio.Button, {\n      value: \"\\u641C\\u7D22\\u6B4C\\u624B\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"\\u641C\\u7D22\\u6B4C\\u624B\"), React.createElement(Radio.Button, {\n      value: \"\\u641C\\u7D22\\u6B4C\\u540D\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"\\u641C\\u7D22\\u6B4C\\u540D\"))), React.createElement(\"ul\", {\n      className: \"ul\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.state.data.map(item => React.createElement(\"li\", {\n      key: item.albumID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: item.albumPic,\n      alt: \"\\u56FE\\u7247\\u4E0D\\u5B58\\u5728\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        paddingLeft: '12px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, item.albumName), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, item.singerName)))));\n  }\n\n}","map":{"version":3,"sources":["/home/sunxuming/react-typescript/src/views/home/index.tsx"],"names":["React","Component","http","Input","Radio","message","Home","state","songs","searchType","size","data","onChange","e","str","target","value","setState","onBlur","searchSongsBySinger","then","res","console","log","status","statusCode","JSON","parse","body","album","list","error","errMessage","componentDidMount","handleSizeChange","event","serchSongs","render","bind","map","item","albumID","albumPic","paddingLeft","albumName","singerName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,KAAT,EAAeC,KAAf,EAAqBC,OAArB,QAAoC,MAApC;AAEA,eAAe,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC1CM,KAD0C,GACpC;AACFC,MAAAA,KAAK,EAAC,EADJ;AAEFC,MAAAA,UAAU,EAAC,MAFT;AAGFC,MAAAA,IAAI,EAAC,SAHH;AAIFC,MAAAA,IAAI,EAAC;AAJH,KADoC;;AAAA,SAa1CC,QAb0C,GAahCC,CAAD,IAAS;AACd,YAAMC,GAAG,GAAGD,CAAC,CAACE,MAAF,CAASC,KAArB;AACA,WAAKC,QAAL,CAAc,MAAI;AACd,eAAO;AAACT,UAAAA,KAAK,EAACM;AAAP,SAAP;AACH,OAFD;AAGH,KAlByC;;AAAA,SA+B1CI,MA/B0C,GA+BnC,MAAI;AACThB,MAAAA,IAAI,CAACiB,mBAAL,CAAyB,KAAKZ,KAAL,CAAWC,KAApC,EAA2CY,IAA3C,CAAiDC,GAAD,IAAW;AACzDC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,YAAIA,GAAG,CAACG,MAAJ,KAAa,GAAjB,EAAsB;AACpB,gBAAM;AAACb,YAAAA;AAAD,cAAQU,GAAd;;AACA,cAAIV,IAAI,CAACc,UAAL,KAAkB,GAAtB,EAA2B;AACzB,iBAAKR,QAAL,CAAc,MAAI;AAChB,qBAAO;AAACN,gBAAAA,IAAI,EAACe,IAAI,CAACC,KAAL,CAAWhB,IAAI,CAACiB,IAAhB,EAAsBjB,IAAtB,CAA2BkB,KAA3B,CAAiCC;AAAvC,eAAP;AACD,aAFD;AAGD,WAJD,MAIK;AACHzB,YAAAA,OAAO,CAAC0B,KAAR,CAAcpB,IAAI,CAACqB,UAAnB,EAA+B,EAA/B;AACD;;AACDV,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWI,IAAvB;AACD,SAVD,MAUO,CAEN;AACF,OAfD;AAgBD,KAhDyC;AAAA;;AAO1C;AACA;AACA;AACAsB,EAAAA,iBAAiB,GAAE,CACjB;AACD;;AAODC,EAAAA,gBAAgB,CAACC,KAAD,EAAW;AACzB,SAAKlB,QAAL,CAAc,MAAI;AAChB,aAAO;AAACR,QAAAA,UAAU,EAAC0B,KAAK,CAACpB,MAAN,CAAaC;AAAzB,OAAP;AACD,KAFD;;AAGA,QAAI,KAAKT,KAAL,CAAWC,KAAf,EAAsB;AACpB,UAAI2B,KAAK,CAACpB,MAAN,CAAaC,KAAb,KAAqB,MAAzB,EAAiC;AAC/B,aAAKE,MAAL;AACD,OAFD,MAEO,CAEN;AACF;AACF;;AAmBDkB,EAAAA,UAAU,GAAE,CAEX;;AACDC,EAAAA,MAAM,GAAE;AACN,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACN;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,KAAK,EAAE,KAAK9B,KAAL,CAAWC,KAAxC;AAA+C,MAAA,WAAW,EAAC,4CAA3D;AACA,MAAA,QAAQ,EAAE,KAAKI,QAAL,CAAc0B,IAAd,CAAmB,IAAnB,CADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGI,oBAAC,KAAD,CAAO,KAAP;AAAa,MAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWE,UAA/B;AAA2C,MAAA,QAAQ,EAAE,KAAKyB,gBAAL,CAAsBI,IAAtB,CAA2B,IAA3B,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,KAAK,EAAC,0BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADA,EAEA,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,KAAK,EAAC,0BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFA,CAHJ,CADM,EASN;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK/B,KAAL,CAAWI,IAAX,CAAgB4B,GAAhB,CAAsBC,IAAD,IAAc;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAClC;AAAK,MAAA,GAAG,EAAED,IAAI,CAACE,QAAf;AAAyB,MAAA,GAAG,EAAC,gCAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADkC,EAElC;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,WAAW,EAAC;AAAb,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCH,IAAI,CAACI,SAAzC,CAFkC,EAGlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOJ,IAAI,CAACK,UAAZ,CAHkC,CAAnC,CADH,CATM,CAAR;AAiBD;;AAtEyC","sourcesContent":["import React, { Component } from 'react'\nimport './index.scss'\nimport http from './../../api/index'\nimport { Input,Radio,message } from 'antd';\n\nexport default class Home extends Component {\n  state={\n      songs:'',\n      searchType:'搜索歌名',\n      size:'default',\n      data:[]\n  }\n  // constructor(props:Object){\n  //     super(props)\n  // }\n  componentDidMount(){\n    // console.log(http)\n  }\n  onChange=(e:any)=>{\n      const str = e.target.value\n      this.setState(()=>{\n          return {songs:str}\n      })\n  }\n  handleSizeChange(event:any){\n    this.setState(()=>{\n      return {searchType:event.target.value}\n    })\n    if (this.state.songs) {\n      if (event.target.value==='搜索歌手') {\n        this.onBlur()\n      } else {\n        \n      }\n    }\n  }\n  onBlur=()=>{\n    http.searchSongsBySinger(this.state.songs).then((res:any)=>{\n      console.log(res)\n      if (res.status===200) {\n        const {data}= res\n        if (data.statusCode===200) {\n          this.setState(()=>{\n            return {data:JSON.parse(data.body).data.album.list}\n          })\n        }else{\n          message.error(data.errMessage, 10);\n        }\n        console.log(this.state.data)\n      } else {\n        \n      }\n    })\n  }\n  serchSongs(){\n\n  }\n  render(){\n    return (<div>\n      <div className=\"search-input\">\n        <Input size=\"default\" value={this.state.songs} placeholder=\"请输入歌曲名称\" \n        onChange={this.onChange.bind(this)} />\n          <Radio.Group value={this.state.searchType} onChange={this.handleSizeChange.bind(this)}>\n          <Radio.Button value=\"搜索歌手\">搜索歌手</Radio.Button>\n          <Radio.Button value=\"搜索歌名\">搜索歌名</Radio.Button>\n        </Radio.Group>\n      </div>\n      <ul className=\"ul\">\n        {this.state.data.map( (item:any) => <li key={item.albumID}>\n          <img src={item.albumPic} alt=\"图片不存在\"/>\n          <span style={{paddingLeft:'12px'}}>{item.albumName}</span>\n          <span>{item.singerName}</span>\n        </li> )}\n      </ul>\n    </div>)\n  }\n}"]},"metadata":{},"sourceType":"module"}