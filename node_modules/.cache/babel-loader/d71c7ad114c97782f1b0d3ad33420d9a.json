{"ast":null,"code":"import axios from 'axios';\n// axios.interceptors.response.use((response:AxiosPromise) => {\n//   return response.data;\n// },\n// (error: any) => {\n//   return Promise.reject(error);\n// })\nexport default {\n  getSongs(id) {\n    return axios({\n      method: 'get',\n      url: '/cloudmusic',\n      params: {\n        type: 'detail',\n        id\n      }\n    });\n  },\n\n  searchSongsByName(songsName) {\n    console.log(songsName);\n    return axios({\n      method: 'get',\n      url: '/songs',\n      params: {\n        songsName\n      }\n    });\n  },\n\n  searchSongsBySinger(singer) {\n    return axios({\n      method: 'get',\n      url: '/singer',\n      params: {\n        singer\n      }\n    });\n  },\n\n  comments(id) {\n    return axios({\n      method: 'get',\n      url: '/cloudmusic',\n      params: {\n        type: 'comments',\n        id\n      }\n    });\n  }\n\n};","map":{"version":3,"sources":["/home/sunxuming/react-typescript/src/api/index.ts"],"names":["axios","getSongs","id","method","url","params","type","searchSongsByName","songsName","console","log","searchSongsBySinger","singer","comments"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACXC,EAAAA,QAAQ,CAACC,EAAD,EAAY;AAClB,WAAOF,KAAK,CAAC;AACXG,MAAAA,MAAM,EAAE,KADG;AAEXC,MAAAA,GAAG,EAAE,aAFM;AAGXC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,QADA;AAENJ,QAAAA;AAFM;AAHG,KAAD,CAAZ;AAQD,GAVU;;AAWXK,EAAAA,iBAAiB,CAACC,SAAD,EAAmB;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,WAAOR,KAAK,CAAC;AACXG,MAAAA,MAAM,EAAE,KADG;AAEXC,MAAAA,GAAG,EAAE,QAFM;AAGXC,MAAAA,MAAM,EAAE;AACNG,QAAAA;AADM;AAHG,KAAD,CAAZ;AAOD,GApBU;;AAqBXG,EAAAA,mBAAmB,CAACC,MAAD,EAAgB;AACjC,WAAOZ,KAAK,CAAC;AACXG,MAAAA,MAAM,EAAE,KADG;AAEXC,MAAAA,GAAG,EAAE,SAFM;AAGXC,MAAAA,MAAM,EAAE;AACNO,QAAAA;AADM;AAHG,KAAD,CAAZ;AAOD,GA7BU;;AA8BXC,EAAAA,QAAQ,CAACX,EAAD,EAAY;AAClB,WAAOF,KAAK,CAAC;AACXG,MAAAA,MAAM,EAAE,KADG;AAEXC,MAAAA,GAAG,EAAE,aAFM;AAGXC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,UADA;AAENJ,QAAAA;AAFM;AAHG,KAAD,CAAZ;AAQD;;AAvCU,CAAf","sourcesContent":["import axios from 'axios'\n\ninterface AxiosRequestConfig {\n  url: string;\n  method?: string;\n  headers?: any;\n  data?: any;\n  params?: any;\n  responseType?: XMLHttpRequestResponseType;\n}\ninterface AxiosResponse {\n  data: any; // 服务端返回的数据\n  status: number; // HTTP 状态码\n  statusText: string; // 状态消息\n  headers: any; // 响应头\n  config: AxiosRequestConfig; // 请求配置对象\n  request: any; // 请求的 XMLHttpRequest 对象实例\n}\ninterface AxiosPromise extends Promise<AxiosResponse> {\n}\n// axios.interceptors.response.use((response:AxiosPromise) => {\n//   return response.data;\n// },\n// (error: any) => {\n//   return Promise.reject(error);\n// })\nexport default {\n    getSongs(id:String) {\n      return axios({\n        method: 'get',\n        url: '/cloudmusic',\n        params: {\n          type: 'detail',\n          id\n        }\n      })\n    },\n    searchSongsByName(songsName:String) {\n      console.log(songsName)\n      return axios({\n        method: 'get',\n        url: '/songs',\n        params: {\n          songsName\n        }\n      })\n    },\n    searchSongsBySinger(singer:String) {\n      return axios({\n        method: 'get',\n        url: '/singer',\n        params: {\n          singer\n        }\n      })\n    },\n    comments(id:Number) {\n      return axios({\n        method: 'get',\n        url: '/cloudmusic',\n        params: {\n          type: 'comments',\n          id\n        }\n      })\n    }\n  }"]},"metadata":{},"sourceType":"module"}