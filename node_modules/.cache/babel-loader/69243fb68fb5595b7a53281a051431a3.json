{"ast":null,"code":"const Util = require('../util/common');\n\nconst Element = require('./element');\n\nconst Container = require('./container');\n\nconst Vector2 = require('./util/vector2');\n\nclass Group extends Element {\n  _initProperties() {\n    this._attrs = {\n      zIndex: 0,\n      visible: true,\n      destroyed: false,\n      isGroup: true,\n      children: []\n    };\n  }\n\n  drawInner(context) {\n    const children = this.get('children');\n\n    for (let i = 0, len = children.length; i < len; i++) {\n      const child = children[i];\n      child.draw(context);\n    }\n\n    return this;\n  }\n\n  getBBox() {\n    const self = this;\n    let minX = Infinity;\n    let maxX = -Infinity;\n    let minY = Infinity;\n    let maxY = -Infinity;\n    const children = self.get('children');\n\n    for (let i = 0, length = children.length; i < length; i++) {\n      const child = children[i];\n\n      if (child.get('visible')) {\n        const box = child.getBBox();\n\n        if (!box) {\n          continue;\n        }\n\n        const leftTop = [box.minX, box.minY];\n        const leftBottom = [box.minX, box.maxY];\n        const rightTop = [box.maxX, box.minY];\n        const rightBottom = [box.maxX, box.maxY];\n        const matrix = child.attr('matrix');\n        Vector2.transformMat2d(leftTop, leftTop, matrix);\n        Vector2.transformMat2d(leftBottom, leftBottom, matrix);\n        Vector2.transformMat2d(rightTop, rightTop, matrix);\n        Vector2.transformMat2d(rightBottom, rightBottom, matrix);\n        minX = Math.min(leftTop[0], leftBottom[0], rightTop[0], rightBottom[0], minX);\n        maxX = Math.max(leftTop[0], leftBottom[0], rightTop[0], rightBottom[0], maxX);\n        minY = Math.min(leftTop[1], leftBottom[1], rightTop[1], rightBottom[1], minY);\n        maxY = Math.max(leftTop[1], leftBottom[1], rightTop[1], rightBottom[1], maxY);\n      }\n    }\n\n    return {\n      minX,\n      minY,\n      maxX,\n      maxY,\n      x: minX,\n      y: minY,\n      width: maxX - minX,\n      height: maxY - minY\n    };\n  }\n\n  destroy() {\n    if (this.get('destroyed')) {\n      return;\n    }\n\n    this.clear();\n    super.destroy();\n  }\n\n}\n\nUtil.mix(Group.prototype, Container, {\n  getGroupClass() {\n    return Group;\n  }\n\n});\nmodule.exports = Group;","map":{"version":3,"sources":["/home/sunxuming/react-typescript/node_modules/_@antv_f2@3.6.0-alpha.2@@antv/f2/src/graphic/group.js"],"names":["Util","require","Element","Container","Vector2","Group","_initProperties","_attrs","zIndex","visible","destroyed","isGroup","children","drawInner","context","get","i","len","length","child","draw","getBBox","self","minX","Infinity","maxX","minY","maxY","box","leftTop","leftBottom","rightTop","rightBottom","matrix","attr","transformMat2d","Math","min","max","x","y","width","height","destroy","clear","mix","prototype","getGroupClass","module","exports"],"mappings":"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","sourcesContent":["const Util = require('../util/common');\nconst Element = require('./element');\nconst Container = require('./container');\nconst Vector2 = require('./util/vector2');\n\nclass Group extends Element {\n  _initProperties() {\n    this._attrs = {\n      zIndex: 0,\n      visible: true,\n      destroyed: false,\n      isGroup: true,\n      children: []\n    };\n  }\n\n  drawInner(context) {\n    const children = this.get('children');\n    for (let i = 0, len = children.length; i < len; i++) {\n      const child = children[i];\n      child.draw(context);\n    }\n    return this;\n  }\n\n  getBBox() {\n    const self = this;\n    let minX = Infinity;\n    let maxX = -Infinity;\n    let minY = Infinity;\n    let maxY = -Infinity;\n    const children = self.get('children');\n    for (let i = 0, length = children.length; i < length; i++) {\n      const child = children[i];\n      if (child.get('visible')) {\n        const box = child.getBBox();\n        if (!box) {\n          continue;\n        }\n\n        const leftTop = [ box.minX, box.minY ];\n        const leftBottom = [ box.minX, box.maxY ];\n        const rightTop = [ box.maxX, box.minY ];\n        const rightBottom = [ box.maxX, box.maxY ];\n        const matrix = child.attr('matrix');\n\n        Vector2.transformMat2d(leftTop, leftTop, matrix);\n        Vector2.transformMat2d(leftBottom, leftBottom, matrix);\n        Vector2.transformMat2d(rightTop, rightTop, matrix);\n        Vector2.transformMat2d(rightBottom, rightBottom, matrix);\n\n        minX = Math.min(leftTop[0], leftBottom[0], rightTop[0], rightBottom[0], minX);\n        maxX = Math.max(leftTop[0], leftBottom[0], rightTop[0], rightBottom[0], maxX);\n        minY = Math.min(leftTop[1], leftBottom[1], rightTop[1], rightBottom[1], minY);\n        maxY = Math.max(leftTop[1], leftBottom[1], rightTop[1], rightBottom[1], maxY);\n      }\n    }\n\n    return {\n      minX,\n      minY,\n      maxX,\n      maxY,\n      x: minX,\n      y: minY,\n      width: maxX - minX,\n      height: maxY - minY\n    };\n  }\n\n  destroy() {\n    if (this.get('destroyed')) {\n      return;\n    }\n    this.clear();\n    super.destroy();\n  }\n}\n\nUtil.mix(Group.prototype, Container, {\n  getGroupClass() {\n    return Group;\n  }\n});\n\nmodule.exports = Group;\n"]},"metadata":{},"sourceType":"script"}