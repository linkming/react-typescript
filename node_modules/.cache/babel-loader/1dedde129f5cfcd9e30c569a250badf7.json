{"ast":null,"code":"var isArray = require('../type/is-array');\n\nvar isFunction = require('../type/is-function');\n\nvar each = require('../each');\n/**\n * @param {Array} arr The array to iterate over.\n * @param {Function} [fn] The iteratee invoked per element.\n * @return {*} Returns the maximum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * maxBy(objects, function(o) { return o.n; });\n * // => { 'n': 2 }\n *\n * maxBy(objects, 'n');\n * // => { 'n': 2 }\n */\n\n\nvar maxBy = function maxBy(arr, fn) {\n  if (!isArray(arr)) {\n    return undefined;\n  }\n\n  var max = arr[0];\n  var maxData = void 0;\n\n  if (isFunction(fn)) {\n    maxData = fn(arr[0]);\n  } else {\n    maxData = arr[0][fn];\n  }\n\n  var data = void 0;\n  each(arr, function (val) {\n    if (isFunction(fn)) {\n      data = fn(val);\n    } else {\n      data = val[fn];\n    }\n\n    if (data > maxData) {\n      max = val;\n      maxData = data;\n    }\n  });\n  return max;\n};\n\nmodule.exports = maxBy;","map":{"version":3,"sources":["/home/sunxuming/react-typescript/node_modules/_@antv_util@1.3.1@@antv/util/lib/math/max-by.js"],"names":["isArray","require","isFunction","each","maxBy","arr","fn","undefined","max","maxData","data","val","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,kBAAD,CAArB;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,qBAAD,CAAxB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,SAAD,CAAlB;AACA;;;;;;;;;;;;;;;;AAcA,IAAIG,KAAK,GAAG,SAASA,KAAT,CAAeC,GAAf,EAAoBC,EAApB,EAAwB;AAClC,MAAI,CAACN,OAAO,CAACK,GAAD,CAAZ,EAAmB;AACjB,WAAOE,SAAP;AACD;;AACD,MAAIC,GAAG,GAAGH,GAAG,CAAC,CAAD,CAAb;AACA,MAAII,OAAO,GAAG,KAAK,CAAnB;;AACA,MAAIP,UAAU,CAACI,EAAD,CAAd,EAAoB;AAClBG,IAAAA,OAAO,GAAGH,EAAE,CAACD,GAAG,CAAC,CAAD,CAAJ,CAAZ;AACD,GAFD,MAEO;AACLI,IAAAA,OAAO,GAAGJ,GAAG,CAAC,CAAD,CAAH,CAAOC,EAAP,CAAV;AACD;;AACD,MAAII,IAAI,GAAG,KAAK,CAAhB;AACAP,EAAAA,IAAI,CAACE,GAAD,EAAM,UAAUM,GAAV,EAAe;AACvB,QAAIT,UAAU,CAACI,EAAD,CAAd,EAAoB;AAClBI,MAAAA,IAAI,GAAGJ,EAAE,CAACK,GAAD,CAAT;AACD,KAFD,MAEO;AACLD,MAAAA,IAAI,GAAGC,GAAG,CAACL,EAAD,CAAV;AACD;;AACD,QAAII,IAAI,GAAGD,OAAX,EAAoB;AAClBD,MAAAA,GAAG,GAAGG,GAAN;AACAF,MAAAA,OAAO,GAAGC,IAAV;AACD;AACF,GAVG,CAAJ;AAWA,SAAOF,GAAP;AACD,CAxBD;;AA0BAI,MAAM,CAACC,OAAP,GAAiBT,KAAjB","sourcesContent":["var isArray = require('../type/is-array');\nvar isFunction = require('../type/is-function');\nvar each = require('../each');\n/**\n * @param {Array} arr The array to iterate over.\n * @param {Function} [fn] The iteratee invoked per element.\n * @return {*} Returns the maximum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * maxBy(objects, function(o) { return o.n; });\n * // => { 'n': 2 }\n *\n * maxBy(objects, 'n');\n * // => { 'n': 2 }\n */\nvar maxBy = function maxBy(arr, fn) {\n  if (!isArray(arr)) {\n    return undefined;\n  }\n  var max = arr[0];\n  var maxData = void 0;\n  if (isFunction(fn)) {\n    maxData = fn(arr[0]);\n  } else {\n    maxData = arr[0][fn];\n  }\n  var data = void 0;\n  each(arr, function (val) {\n    if (isFunction(fn)) {\n      data = fn(val);\n    } else {\n      data = val[fn];\n    }\n    if (data > maxData) {\n      max = val;\n      maxData = data;\n    }\n  });\n  return max;\n};\n\nmodule.exports = maxBy;"]},"metadata":{},"sourceType":"script"}