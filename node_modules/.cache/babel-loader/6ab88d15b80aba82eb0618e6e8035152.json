{"ast":null,"code":"var _jsxFileName = \"/home/sunxuming/react-typescript/src/views/about/index.tsx\";\nimport * as React from 'react';\nimport http from './../../api';\nimport './index.css';\nimport { Comment, Tooltip, List } from 'antd';\nimport moment from 'moment';\nexport default class About extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      params: {\n        g_tk: 5381,\n        loginUin: 0,\n        hostUin: 0,\n        format: 'json',\n        inCharset: 'utf8',\n        outCharset: 'GB2312',\n        notice: 0,\n        platform: 'yqq.json',\n        needNewCode: 0,\n        cid: 205360772,\n        reqtype: 2,\n        biztype: 1,\n        topid: 0,\n        cmd: 8,\n        needmusiccrit: 0,\n        pagenum: 0,\n        pagesize: 25,\n        lasthotcommentid: '',\n        domain: 'qq.com',\n        ct: 24,\n        cv: 10101010\n      },\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    var params = Object.assign({}, this.state.params, {\n      topid: this.props.match.params['id']\n    });\n    this.setState(() => {\n      return {\n        params\n      };\n    });\n    setTimeout(() => {\n      this.getComment();\n    }, 0);\n  }\n\n  getComment() {\n    http.getComment(this.state.params, this.props.match.params['mid']).then(res => {\n      console.log(JSON.parse(res.body)['hot_comment'].commentlist);\n      const arr = JSON.parse(res.body)['hot_comment'].commentlist.map(item => {\n        return {\n          actions: [React.createElement(\"span\", {\n            key: \"comment-list-reply-to-0\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, \"Reply to\")],\n          author: 'Han Solo',\n          avatar: item.avatarurl,\n          content: React.createElement(\"p\", {\n            dangerouslySetInnerHTML: {\n              __html: item.rootcommentcontent\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }),\n          datetime: React.createElement(Tooltip, {\n            title: moment().subtract(1, 'days').format('YYYY-MM-DD HH:mm:ss'),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }, moment().subtract(Math.round(item.time / 1000 / 60 / 60 / 24), 'days').fromNow()))\n        };\n      });\n      this.setState(() => {\n        return {\n          data: arr\n        };\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"about\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(List, {\n      className: \"comment-list\",\n      header: `${this.state.data.length} replies`,\n      itemLayout: \"horizontal\",\n      dataSource: this.state.data,\n      renderItem: item => React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Comment, {\n        actions: item.actions,\n        author: item.author,\n        avatar: item.avatar,\n        content: item.content,\n        datetime: item.datetime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/sunxuming/react-typescript/src/views/about/index.tsx"],"names":["React","http","Comment","Tooltip","List","moment","About","Component","state","params","g_tk","loginUin","hostUin","format","inCharset","outCharset","notice","platform","needNewCode","cid","reqtype","biztype","topid","cmd","needmusiccrit","pagenum","pagesize","lasthotcommentid","domain","ct","cv","data","componentDidMount","Object","assign","props","match","setState","setTimeout","getComment","then","res","console","log","JSON","parse","body","commentlist","arr","map","item","actions","author","avatar","avatarurl","content","__html","rootcommentcontent","datetime","subtract","Math","round","time","fromNow","render","length"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport http from './../../api'\nimport './index.css'\nimport { Comment, Tooltip, List } from 'antd';\nimport moment from 'moment';\n\nexport default class About extends React.Component<any> {\n    state={\n      params:{\n        g_tk:5381,\n        loginUin:0,\n        hostUin:0,\n        format:'json',\n        inCharset:'utf8',\n        outCharset:'GB2312',\n        notice:0,\n        platform:'yqq.json',\n        needNewCode:0,\n        cid:205360772,\n        reqtype:2,\n        biztype:1,\n        topid:0,\n        cmd:8,\n        needmusiccrit:0,\n        pagenum:0,\n        pagesize:25,\n        lasthotcommentid:'',\n        domain:'qq.com',\n        ct:24,\n        cv:10101010\n      },\n      data:[]\n    }\n    componentDidMount(){\n      var params = Object.assign({},this.state.params,{topid:this.props.match.params['id']})\n      this.setState(()=>{\n        return {params}\n      })\n     setTimeout(() => {\n      this.getComment()\n     }, 0);\n    }\n    getComment() {\n      http.getComment(this.state.params,this.props.match.params['mid']).then((res:any)=>{\n        console.log(JSON.parse(res.body)['hot_comment'].commentlist)\n        const arr = JSON.parse(res.body)['hot_comment'].commentlist.map((item:any)=>{\n          return {\n              actions: [<span key=\"comment-list-reply-to-0\">Reply to</span>],\n              author: 'Han Solo',\n              avatar: item.avatarurl,\n              content: (\n                <p dangerouslySetInnerHTML={{__html: item.rootcommentcontent}}>\n                  {/* {item.rootcommentcontent} */}\n                </p>\n              ),\n              datetime: (\n                <Tooltip\n                  title={moment()\n                    .subtract(1, 'days')\n                    .format('YYYY-MM-DD HH:mm:ss')}\n                >\n                  <span>\n                    {moment()\n                      .subtract(Math.round(item.time/1000/60/60/24), 'days')\n                      .fromNow()}\n                  </span>\n                </Tooltip>\n              ),\n            }\n        })\n        this.setState(()=>{\n          return {data:arr}\n        })\n      })\n    }\n   render(){\n     return (<div className=\"about\">\n      <List\n        className=\"comment-list\"\n        header={`${this.state.data.length} replies`}\n        itemLayout=\"horizontal\"\n        dataSource={this.state.data}\n        renderItem={(item:any) => (\n          <li>\n            <Comment\n              actions={item.actions}\n              author={item.author}\n              avatar={item.avatar}\n              content={item.content}\n              datetime={item.datetime}\n            />\n          </li>\n        )}\n      />\n     </div>)\n  }\n}"]},"metadata":{},"sourceType":"module"}