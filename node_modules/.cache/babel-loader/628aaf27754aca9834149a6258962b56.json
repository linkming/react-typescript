{"ast":null,"code":"const Util = require('../../util/common');\n\nconst GuideBase = require('./base');\n\nclass Line extends GuideBase {\n  _initDefaultCfg() {\n    this.type = 'line';\n    this.start = [];\n    this.end = [];\n    this.style = {\n      stroke: '#000',\n      lineWidth: 1\n    };\n  }\n\n  render(coord, container) {\n    const points = [];\n    points[0] = this.parsePoint(coord, this.start);\n    points[1] = this.parsePoint(coord, this.end);\n\n    if (!points[0] || !points[1]) {\n      return;\n    }\n\n    const shape = container.addShape('Line', {\n      className: 'guide-line',\n      attrs: Util.mix({\n        x1: points[0].x,\n        y1: points[0].y,\n        x2: points[1].x,\n        y2: points[1].y\n      }, this.style)\n    });\n    this.element = shape;\n    return shape;\n  }\n\n}\n\nGuideBase.Line = Line;\nmodule.exports = Line;","map":{"version":3,"sources":["/home/sunxuming/react-typescript/node_modules/_@antv_f2@3.6.0-alpha.2@@antv/f2/src/component/guide/line.js"],"names":["Util","require","GuideBase","Line","_initDefaultCfg","type","start","end","style","stroke","lineWidth","render","coord","container","points","parsePoint","shape","addShape","className","attrs","mix","x1","x","y1","y","x2","y2","element","module","exports"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,mBAAD,CAApB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,QAAD,CAAzB;;AAEA,MAAME,IAAN,SAAmBD,SAAnB,CAA6B;AAC3BE,EAAAA,eAAe,GAAG;AAChB,SAAKC,IAAL,GAAY,MAAZ;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,GAAL,GAAW,EAAX;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,MADG;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAID;;AAEDC,EAAAA,MAAM,CAACC,KAAD,EAAQC,SAAR,EAAmB;AACvB,UAAMC,MAAM,GAAG,EAAf;AACAA,IAAAA,MAAM,CAAC,CAAD,CAAN,GAAY,KAAKC,UAAL,CAAgBH,KAAhB,EAAuB,KAAKN,KAA5B,CAAZ;AACAQ,IAAAA,MAAM,CAAC,CAAD,CAAN,GAAY,KAAKC,UAAL,CAAgBH,KAAhB,EAAuB,KAAKL,GAA5B,CAAZ;;AACA,QAAI,CAACO,MAAM,CAAC,CAAD,CAAP,IAAc,CAACA,MAAM,CAAC,CAAD,CAAzB,EAA8B;AAC5B;AACD;;AACD,UAAME,KAAK,GAAGH,SAAS,CAACI,QAAV,CAAmB,MAAnB,EAA2B;AACvCC,MAAAA,SAAS,EAAE,YAD4B;AAEvCC,MAAAA,KAAK,EAAEnB,IAAI,CAACoB,GAAL,CAAS;AACdC,QAAAA,EAAE,EAAEP,MAAM,CAAC,CAAD,CAAN,CAAUQ,CADA;AAEdC,QAAAA,EAAE,EAAET,MAAM,CAAC,CAAD,CAAN,CAAUU,CAFA;AAGdC,QAAAA,EAAE,EAAEX,MAAM,CAAC,CAAD,CAAN,CAAUQ,CAHA;AAIdI,QAAAA,EAAE,EAAEZ,MAAM,CAAC,CAAD,CAAN,CAAUU;AAJA,OAAT,EAKJ,KAAKhB,KALD;AAFgC,KAA3B,CAAd;AASA,SAAKmB,OAAL,GAAeX,KAAf;AACA,WAAOA,KAAP;AACD;;AA7B0B;;AAgC7Bd,SAAS,CAACC,IAAV,GAAiBA,IAAjB;AACAyB,MAAM,CAACC,OAAP,GAAiB1B,IAAjB","sourcesContent":["const Util = require('../../util/common');\nconst GuideBase = require('./base');\n\nclass Line extends GuideBase {\n  _initDefaultCfg() {\n    this.type = 'line';\n    this.start = [];\n    this.end = [];\n    this.style = {\n      stroke: '#000',\n      lineWidth: 1\n    };\n  }\n\n  render(coord, container) {\n    const points = [];\n    points[0] = this.parsePoint(coord, this.start);\n    points[1] = this.parsePoint(coord, this.end);\n    if (!points[0] || !points[1]) {\n      return;\n    }\n    const shape = container.addShape('Line', {\n      className: 'guide-line',\n      attrs: Util.mix({\n        x1: points[0].x,\n        y1: points[0].y,\n        x2: points[1].x,\n        y2: points[1].y\n      }, this.style)\n    });\n    this.element = shape;\n    return shape;\n  }\n}\n\nGuideBase.Line = Line;\nmodule.exports = Line;\n"]},"metadata":{},"sourceType":"script"}