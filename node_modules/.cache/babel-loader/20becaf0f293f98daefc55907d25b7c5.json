{"ast":null,"code":"function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar each = require('@antv/util/lib/each');\n\nvar maxBy = require('@antv/util/lib/math/max-by');\n\nvar isArray = require('@antv/util/lib/type/is-array');\n\nvar ArrayUtil = {\n  merge: require('@antv/util/lib/array/merge')\n};\n\nvar Adjust = require('./base');\n\nvar Symmetric =\n/*#__PURE__*/\nfunction (_Adjust) {\n  _inheritsLoose(Symmetric, _Adjust);\n\n  function Symmetric() {\n    return _Adjust.apply(this, arguments) || this;\n  }\n\n  var _proto = Symmetric.prototype;\n\n  _proto._initDefaultCfg = function _initDefaultCfg() {\n    this.xField = null; // 调整对应的 x 方向对应的字段名称\n\n    this.yField = null; // 调整对应的 y 方向对应的字段名称\n\n    this.cacheMax = null; // 缓存的最大值\n\n    this.adjustNames = ['y']; // Only support stack y\n\n    this.groupFields = null; // 参与分组的数据维度\n  }; // 获取最大的y值\n\n\n  _proto._getMax = function _getMax(dim) {\n    var self = this;\n    var mergeData = self.mergeData;\n    var maxRecord = maxBy(mergeData, function (obj) {\n      var value = obj[dim];\n\n      if (isArray(value)) {\n        return Math.max.apply(null, value);\n      }\n\n      return value;\n    });\n    var maxValue = maxRecord[dim];\n    var max = isArray(maxValue) ? Math.max.apply(null, maxValue) : maxValue;\n    return max;\n  }; // 获取每个字段最大的值\n\n\n  _proto._getXValuesMax = function _getXValuesMax() {\n    var self = this;\n    var yField = self.yField;\n    var xField = self.xField;\n    var cache = {};\n    var mergeData = self.mergeData;\n    each(mergeData, function (obj) {\n      var xValue = obj[xField];\n      var yValue = obj[yField];\n      var max = isArray(yValue) ? Math.max.apply(null, yValue) : yValue;\n      cache[xValue] = cache[xValue] || 0;\n\n      if (cache[xValue] < max) {\n        cache[xValue] = max;\n      }\n    });\n    return cache;\n  }; // 入口函数\n\n\n  _proto.processAdjust = function processAdjust(dataArray) {\n    var self = this;\n    var mergeData = ArrayUtil.merge(dataArray);\n    self.mergeData = mergeData;\n\n    self._processSymmetric(dataArray);\n\n    self.mergeData = null;\n  }; // 处理对称\n\n\n  _proto._processSymmetric = function _processSymmetric(dataArray) {\n    var self = this;\n    var xField = self.xField;\n    var yField = self.yField;\n\n    var max = self._getMax(yField);\n\n    var first = dataArray[0][0];\n    var cache;\n\n    if (first && isArray(first[yField])) {\n      cache = self._getXValuesMax();\n    }\n\n    each(dataArray, function (data) {\n      each(data, function (obj) {\n        var value = obj[yField];\n        var offset;\n\n        if (isArray(value)) {\n          var xValue = obj[xField];\n          var valueMax = cache[xValue];\n          offset = (max - valueMax) / 2;\n          var tmp = [];\n          /* eslint-disable no-loop-func */\n\n          each(value, function (subVal) {\n            // 多个字段\n            tmp.push(offset + subVal);\n          });\n          /* eslint-enable no-loop-func */\n\n          obj[yField] = tmp;\n        } else {\n          offset = (max - value) / 2;\n          obj[yField] = [offset, value + offset];\n        }\n      });\n    });\n  };\n\n  return Symmetric;\n}(Adjust);\n\nAdjust.Symmetric = Symmetric;\nmodule.exports = Symmetric;","map":{"version":3,"sources":["/home/sunxuming/react-typescript/node_modules/_@antv_adjust@0.1.1@@antv/adjust/lib/symmetric.js"],"names":["_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","__proto__","each","require","maxBy","isArray","ArrayUtil","merge","Adjust","Symmetric","_Adjust","apply","arguments","_proto","_initDefaultCfg","xField","yField","cacheMax","adjustNames","groupFields","_getMax","dim","self","mergeData","maxRecord","obj","value","Math","max","maxValue","_getXValuesMax","cache","xValue","yValue","processAdjust","dataArray","_processSymmetric","first","data","offset","valueMax","tmp","subVal","push","module","exports"],"mappings":"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","sourcesContent":["function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar each = require('@antv/util/lib/each');\n\nvar maxBy = require('@antv/util/lib/math/max-by');\n\nvar isArray = require('@antv/util/lib/type/is-array');\n\nvar ArrayUtil = {\n  merge: require('@antv/util/lib/array/merge')\n};\n\nvar Adjust = require('./base');\n\nvar Symmetric =\n/*#__PURE__*/\nfunction (_Adjust) {\n  _inheritsLoose(Symmetric, _Adjust);\n\n  function Symmetric() {\n    return _Adjust.apply(this, arguments) || this;\n  }\n\n  var _proto = Symmetric.prototype;\n\n  _proto._initDefaultCfg = function _initDefaultCfg() {\n    this.xField = null; // 调整对应的 x 方向对应的字段名称\n\n    this.yField = null; // 调整对应的 y 方向对应的字段名称\n\n    this.cacheMax = null; // 缓存的最大值\n\n    this.adjustNames = ['y']; // Only support stack y\n\n    this.groupFields = null; // 参与分组的数据维度\n  }; // 获取最大的y值\n\n\n  _proto._getMax = function _getMax(dim) {\n    var self = this;\n    var mergeData = self.mergeData;\n    var maxRecord = maxBy(mergeData, function (obj) {\n      var value = obj[dim];\n\n      if (isArray(value)) {\n        return Math.max.apply(null, value);\n      }\n\n      return value;\n    });\n    var maxValue = maxRecord[dim];\n    var max = isArray(maxValue) ? Math.max.apply(null, maxValue) : maxValue;\n    return max;\n  }; // 获取每个字段最大的值\n\n\n  _proto._getXValuesMax = function _getXValuesMax() {\n    var self = this;\n    var yField = self.yField;\n    var xField = self.xField;\n    var cache = {};\n    var mergeData = self.mergeData;\n    each(mergeData, function (obj) {\n      var xValue = obj[xField];\n      var yValue = obj[yField];\n      var max = isArray(yValue) ? Math.max.apply(null, yValue) : yValue;\n      cache[xValue] = cache[xValue] || 0;\n\n      if (cache[xValue] < max) {\n        cache[xValue] = max;\n      }\n    });\n    return cache;\n  }; // 入口函数\n\n\n  _proto.processAdjust = function processAdjust(dataArray) {\n    var self = this;\n    var mergeData = ArrayUtil.merge(dataArray);\n    self.mergeData = mergeData;\n\n    self._processSymmetric(dataArray);\n\n    self.mergeData = null;\n  }; // 处理对称\n\n\n  _proto._processSymmetric = function _processSymmetric(dataArray) {\n    var self = this;\n    var xField = self.xField;\n    var yField = self.yField;\n\n    var max = self._getMax(yField);\n\n    var first = dataArray[0][0];\n    var cache;\n\n    if (first && isArray(first[yField])) {\n      cache = self._getXValuesMax();\n    }\n\n    each(dataArray, function (data) {\n      each(data, function (obj) {\n        var value = obj[yField];\n        var offset;\n\n        if (isArray(value)) {\n          var xValue = obj[xField];\n          var valueMax = cache[xValue];\n          offset = (max - valueMax) / 2;\n          var tmp = [];\n          /* eslint-disable no-loop-func */\n\n          each(value, function (subVal) {\n            // 多个字段\n            tmp.push(offset + subVal);\n          });\n          /* eslint-enable no-loop-func */\n\n          obj[yField] = tmp;\n        } else {\n          offset = (max - value) / 2;\n          obj[yField] = [offset, value + offset];\n        }\n      });\n    });\n  };\n\n  return Symmetric;\n}(Adjust);\n\nAdjust.Symmetric = Symmetric;\nmodule.exports = Symmetric;"]},"metadata":{},"sourceType":"script"}