{"ast":null,"code":"import isArray from './is-array';\nimport filter from './filter';\n\nvar getRange = function (values) {\n  // 存在 NaN 时，min,max 判定会出问题\n  values = filter(values, function (v) {\n    return !isNaN(v);\n  });\n\n  if (!values.length) {\n    // 如果没有数值则直接返回0\n    return {\n      min: 0,\n      max: 0\n    };\n  }\n\n  if (isArray(values[0])) {\n    var tmp = [];\n\n    for (var i = 0; i < values.length; i++) {\n      tmp = tmp.concat(values[i]);\n    }\n\n    values = tmp;\n  }\n\n  var max = Math.max.apply(null, values);\n  var min = Math.min.apply(null, values);\n  return {\n    min: min,\n    max: max\n  };\n};\n\nexport default getRange;","map":{"version":3,"sources":["../src/get-range.ts"],"names":[],"mappings":"AAAA,OAAO,OAAP,MAAoB,YAApB;AACA,OAAO,MAAP,MAAmB,UAAnB;;AAOA,IAAM,QAAQ,GAAG,UAAS,MAAT,EAAyB;AACxC;AACA,EAAA,MAAM,GAAG,MAAM,CAAC,MAAD,EAAS,UAAS,CAAT,EAAU;AAChC,WAAO,CAAC,KAAK,CAAC,CAAD,CAAb;AACD,GAFc,CAAf;;AAGA,MAAI,CAAC,MAAM,CAAC,MAAZ,EAAoB;AAAE;AACpB,WAAO;AACL,MAAA,GAAG,EAAE,CADA;AAEL,MAAA,GAAG,EAAE;AAFA,KAAP;AAID;;AACD,MAAI,OAAO,CAAC,MAAM,CAAC,CAAD,CAAP,CAAX,EAAwB;AACtB,QAAI,GAAG,GAAG,EAAV;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,CAAC,EAApC,EAAwC;AACtC,MAAA,GAAG,GAAG,GAAG,CAAC,MAAJ,CAAW,MAAM,CAAC,CAAD,CAAjB,CAAN;AACD;;AACD,IAAA,MAAM,GAAG,GAAT;AACD;;AACD,MAAM,GAAG,GAAG,IAAI,CAAC,GAAL,CAAS,KAAT,CAAe,IAAf,EAAqB,MAArB,CAAZ;AACA,MAAM,GAAG,GAAG,IAAI,CAAC,GAAL,CAAS,KAAT,CAAe,IAAf,EAAqB,MAArB,CAAZ;AACA,SAAO;AACL,IAAA,GAAG,EAAA,GADE;AAEL,IAAA,GAAG,EAAA;AAFE,GAAP;AAID,CAxBD;;AA0BA,eAAe,QAAf","sourceRoot":"","sourcesContent":["import isArray from './is-array';\nimport filter from './filter';\nvar getRange = function (values) {\n    // 存在 NaN 时，min,max 判定会出问题\n    values = filter(values, function (v) {\n        return !isNaN(v);\n    });\n    if (!values.length) { // 如果没有数值则直接返回0\n        return {\n            min: 0,\n            max: 0\n        };\n    }\n    if (isArray(values[0])) {\n        var tmp = [];\n        for (var i = 0; i < values.length; i++) {\n            tmp = tmp.concat(values[i]);\n        }\n        values = tmp;\n    }\n    var max = Math.max.apply(null, values);\n    var min = Math.min.apply(null, values);\n    return {\n        min: min,\n        max: max\n    };\n};\nexport default getRange;\n//# sourceMappingURL=get-range.js.map"]},"metadata":{},"sourceType":"module"}