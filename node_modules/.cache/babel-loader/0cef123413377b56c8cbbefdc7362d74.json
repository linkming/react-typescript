{"ast":null,"code":"const Util = require('../../util/common');\n\nconst GuideBase = require('./base');\n\nclass Tag extends GuideBase {\n  _initDefaultCfg() {\n    this.type = 'tag';\n    this.position = null;\n    this.content = null;\n    this.direct = 'tl';\n    this.autoAdjust = true;\n    this.offsetX = 0;\n    this.offsetY = 0;\n    this.side = 4;\n    this.background = {\n      padding: 5,\n      radius: 2,\n      fill: '#1890FF'\n    };\n    this.textStyle = {\n      fontSize: 12,\n      fill: '#fff',\n      textAlign: 'center',\n      textBaseline: 'middle'\n    };\n    this.withPoint = true;\n    this.pointStyle = {\n      fill: '#1890FF',\n      r: 3,\n      lineWidth: 1,\n      stroke: '#fff'\n    };\n  }\n\n  _getDirect(container, point, tagWidth, tagHeight) {\n    let direct = this.direct;\n    const side = this.side;\n    const canvas = container.get('canvas');\n    const clientWidth = canvas.get('width');\n    const clientHeight = canvas.get('height');\n    const {\n      x,\n      y\n    } = point;\n    let vertical = direct[0];\n    let horizontal = direct[1]; // adjust for vertical direction\n\n    if (vertical === 't' && y - side - tagHeight < 0) {\n      vertical = 'b';\n    } else if (vertical === 'b' && y + side + tagHeight > clientHeight) {\n      vertical = 't';\n    } // adjust for horizontal direction\n\n\n    const diff = vertical === 'c' ? side : 0;\n\n    if (horizontal === 'l' && x - diff - tagWidth < 0) {\n      horizontal = 'r';\n    } else if (horizontal === 'r' && x + diff + tagWidth > clientWidth) {\n      horizontal = 'l';\n    } else if (horizontal === 'c') {\n      if (tagWidth / 2 + x + diff > clientWidth) {\n        horizontal = 'l';\n      } else if (x - tagWidth / 2 - diff < 0) {\n        horizontal = 'r';\n      }\n    }\n\n    direct = vertical + horizontal;\n    return direct;\n  }\n\n  render(coord, container) {\n    const position = this.parsePoint(coord, this.position);\n\n    if (!position) {\n      return;\n    }\n\n    const {\n      content,\n      background,\n      textStyle\n    } = this;\n    const shapes = [];\n    const wrapperContainer = container.addGroup({\n      className: 'guide-tag'\n    });\n\n    if (this.withPoint) {\n      const pointShape = wrapperContainer.addShape('Circle', {\n        className: 'guide-tag-point',\n        attrs: Util.mix({\n          x: position.x,\n          y: position.y\n        }, this.pointStyle)\n      });\n      shapes.push(pointShape);\n    }\n\n    const tagContainer = wrapperContainer.addGroup(); // create a text shape\n\n    const tagText = tagContainer.addShape('text', {\n      className: 'guide-tag-text',\n      zIndex: 1,\n      attrs: Util.mix({\n        x: 0,\n        y: 0,\n        text: content\n      }, textStyle)\n    });\n    shapes.push(tagText); // create background box\n\n    const textBBox = tagText.getBBox();\n    const padding = Util.parsePadding(background.padding);\n    const tagWidth = textBBox.width + padding[1] + padding[3];\n    const tagHeight = textBBox.height + padding[0] + padding[2];\n    const yMin = textBBox.minY - padding[0];\n    const xMin = textBBox.minX - padding[3];\n    const tagBg = tagContainer.addShape('rect', {\n      className: 'guide-tag-bg',\n      zIndex: -1,\n      attrs: Util.mix({\n        x: xMin,\n        y: yMin,\n        width: tagWidth,\n        height: tagHeight\n      }, background)\n    });\n    shapes.push(tagBg);\n    const direct = this.autoAdjust ? this._getDirect(container, position, tagWidth, tagHeight) : this.direct;\n    const side = this.side;\n    let x = position.x + this.offsetX;\n    let y = position.y + this.offsetY;\n    let arrowPoints;\n    const radius = Util.parsePadding(background.radius);\n\n    if (direct === 'tl') {\n      arrowPoints = [{\n        x: tagWidth + xMin - side - 1,\n        y: tagHeight + yMin - 1\n      }, // 这个 1 是为了防止出现白边\n      {\n        x: tagWidth + xMin,\n        y: tagHeight + yMin - 1\n      }, {\n        x: tagWidth + xMin,\n        y: tagHeight + side + yMin\n      }];\n      radius[2] = 0;\n      x = x - tagWidth;\n      y = y - side - tagHeight;\n    } else if (direct === 'cl') {\n      arrowPoints = [{\n        x: tagWidth + xMin - 1,\n        y: (tagHeight - side) / 2 + yMin - 1\n      }, {\n        x: tagWidth + xMin - 1,\n        y: (tagHeight + side) / 2 + yMin + 1\n      }, {\n        x: tagWidth + side + xMin,\n        y: tagHeight / 2 + yMin\n      }];\n      x = x - tagWidth - side;\n      y = y - tagHeight / 2;\n    } else if (direct === 'bl') {\n      arrowPoints = [{\n        x: tagWidth + xMin,\n        y: -side + yMin\n      }, {\n        x: tagWidth + xMin - side - 1,\n        y: yMin + 1\n      }, {\n        x: tagWidth + xMin,\n        y: yMin + 1\n      }];\n      radius[1] = 0;\n      x = x - tagWidth;\n      y = y + side;\n    } else if (direct === 'bc') {\n      arrowPoints = [{\n        x: tagWidth / 2 + xMin,\n        y: -side + yMin\n      }, {\n        x: (tagWidth - side) / 2 + xMin - 1,\n        y: yMin + 1\n      }, {\n        x: (tagWidth + side) / 2 + xMin + 1,\n        y: yMin + 1\n      }];\n      x = x - tagWidth / 2;\n      y = y + side;\n    } else if (direct === 'br') {\n      arrowPoints = [{\n        x: xMin,\n        y: yMin - side\n      }, {\n        x: xMin,\n        y: yMin + 1\n      }, {\n        x: xMin + side + 1,\n        y: yMin + 1\n      }];\n      radius[0] = 0;\n      y = y + side;\n    } else if (direct === 'cr') {\n      arrowPoints = [{\n        x: xMin - side,\n        y: tagHeight / 2 + yMin\n      }, {\n        x: xMin + 1,\n        y: (tagHeight - side) / 2 + yMin - 1\n      }, {\n        x: xMin + 1,\n        y: (tagHeight + side) / 2 + yMin + 1\n      }];\n      x = x + side;\n      y = y - tagHeight / 2;\n    } else if (direct === 'tr') {\n      arrowPoints = [{\n        x: xMin,\n        y: tagHeight + side + yMin\n      }, {\n        x: xMin,\n        y: tagHeight + yMin - 1\n      }, {\n        x: side + xMin + 1,\n        y: tagHeight + yMin - 1\n      }];\n      radius[3] = 0;\n      y = y - tagHeight - side;\n    } else if (direct === 'tc') {\n      arrowPoints = [{\n        x: (tagWidth - side) / 2 + xMin - 1,\n        y: tagHeight + yMin - 1\n      }, {\n        x: (tagWidth + side) / 2 + xMin + 1,\n        y: tagHeight + yMin - 1\n      }, {\n        x: tagWidth / 2 + xMin,\n        y: tagHeight + side + yMin\n      }];\n      x = x - tagWidth / 2;\n      y = y - tagHeight - side;\n    }\n\n    const sideShape = tagContainer.addShape('Polygon', {\n      className: 'guide-tag-side',\n      zIndex: 0,\n      attrs: {\n        points: arrowPoints,\n        fill: background.fill\n      }\n    });\n    shapes.push(sideShape);\n    tagBg.attr('radius', radius);\n    tagContainer.moveTo(x - xMin, y - yMin);\n    tagContainer.sort();\n    this.element = wrapperContainer;\n    return shapes;\n  }\n\n}\n\nGuideBase.Tag = Tag;\nmodule.exports = Tag;","map":{"version":3,"sources":["/home/sunxuming/react-typescript/node_modules/_@antv_f2@3.6.0-alpha.2@@antv/f2/src/component/guide/tag.js"],"names":["Util","require","GuideBase","Tag","_initDefaultCfg","type","position","content","direct","autoAdjust","offsetX","offsetY","side","background","padding","radius","fill","textStyle","fontSize","textAlign","textBaseline","withPoint","pointStyle","r","lineWidth","stroke","_getDirect","container","point","tagWidth","tagHeight","canvas","get","clientWidth","clientHeight","x","y","vertical","horizontal","diff","render","coord","parsePoint","shapes","wrapperContainer","addGroup","className","pointShape","addShape","attrs","mix","push","tagContainer","tagText","zIndex","text","textBBox","getBBox","parsePadding","width","height","yMin","minY","xMin","minX","tagBg","arrowPoints","sideShape","points","attr","moveTo","sort","element","module","exports"],"mappings":"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","sourcesContent":["const Util = require('../../util/common');\nconst GuideBase = require('./base');\n\nclass Tag extends GuideBase {\n  _initDefaultCfg() {\n    this.type = 'tag';\n    this.position = null;\n    this.content = null;\n    this.direct = 'tl';\n    this.autoAdjust = true;\n    this.offsetX = 0;\n    this.offsetY = 0;\n    this.side = 4;\n    this.background = {\n      padding: 5,\n      radius: 2,\n      fill: '#1890FF'\n    };\n    this.textStyle = {\n      fontSize: 12,\n      fill: '#fff',\n      textAlign: 'center',\n      textBaseline: 'middle'\n    };\n    this.withPoint = true;\n    this.pointStyle = {\n      fill: '#1890FF',\n      r: 3,\n      lineWidth: 1,\n      stroke: '#fff'\n    };\n  }\n\n  _getDirect(container, point, tagWidth, tagHeight) {\n    let direct = this.direct;\n    const side = this.side;\n    const canvas = container.get('canvas');\n    const clientWidth = canvas.get('width');\n    const clientHeight = canvas.get('height');\n    const { x, y } = point;\n\n    let vertical = direct[0];\n    let horizontal = direct[1];\n\n    // adjust for vertical direction\n    if (vertical === 't' && (y - side - tagHeight) < 0) {\n      vertical = 'b';\n    } else if (vertical === 'b' && (y + side + tagHeight) > clientHeight) {\n      vertical = 't';\n    }\n    // adjust for horizontal direction\n    const diff = vertical === 'c' ? side : 0;\n    if (horizontal === 'l' && (x - diff - tagWidth) < 0) {\n      horizontal = 'r';\n    } else if (horizontal === 'r' && (x + diff + tagWidth) > clientWidth) {\n      horizontal = 'l';\n    } else if (horizontal === 'c') {\n      if (tagWidth / 2 + x + diff > clientWidth) {\n        horizontal = 'l';\n      } else if (x - (tagWidth / 2) - diff < 0) {\n        horizontal = 'r';\n      }\n    }\n\n    direct = vertical + horizontal;\n    return direct;\n  }\n\n  render(coord, container) {\n    const position = this.parsePoint(coord, this.position);\n    if (!position) {\n      return;\n    }\n    const { content, background, textStyle } = this;\n    const shapes = [];\n\n    const wrapperContainer = container.addGroup({\n      className: 'guide-tag'\n    });\n\n    if (this.withPoint) {\n      const pointShape = wrapperContainer.addShape('Circle', {\n        className: 'guide-tag-point',\n        attrs: Util.mix({\n          x: position.x,\n          y: position.y\n        }, this.pointStyle)\n      });\n      shapes.push(pointShape);\n    }\n\n    const tagContainer = wrapperContainer.addGroup();\n    // create a text shape\n    const tagText = tagContainer.addShape('text', {\n      className: 'guide-tag-text',\n      zIndex: 1,\n      attrs: Util.mix({\n        x: 0,\n        y: 0,\n        text: content\n      }, textStyle)\n    });\n    shapes.push(tagText);\n\n    // create background box\n    const textBBox = tagText.getBBox();\n    const padding = Util.parsePadding(background.padding);\n    const tagWidth = textBBox.width + padding[1] + padding[3];\n    const tagHeight = textBBox.height + padding[0] + padding[2];\n    const yMin = textBBox.minY - padding[0];\n    const xMin = textBBox.minX - padding[3];\n    const tagBg = tagContainer.addShape('rect', {\n      className: 'guide-tag-bg',\n      zIndex: -1,\n      attrs: Util.mix({\n        x: xMin,\n        y: yMin,\n        width: tagWidth,\n        height: tagHeight\n      }, background)\n    });\n    shapes.push(tagBg);\n    const direct = this.autoAdjust ? this._getDirect(container, position, tagWidth, tagHeight) : this.direct;\n    const side = this.side;\n    let x = position.x + this.offsetX;\n    let y = position.y + this.offsetY;\n    let arrowPoints;\n    const radius = Util.parsePadding(background.radius);\n    if (direct === 'tl') {\n      arrowPoints = [\n        { x: tagWidth + xMin - side - 1, y: tagHeight + yMin - 1 }, // 这个 1 是为了防止出现白边\n        { x: tagWidth + xMin, y: tagHeight + yMin - 1 },\n        { x: tagWidth + xMin, y: tagHeight + side + yMin }\n      ];\n      radius[2] = 0;\n      x = x - tagWidth;\n      y = y - side - tagHeight;\n    } else if (direct === 'cl') {\n      arrowPoints = [\n        { x: tagWidth + xMin - 1, y: (tagHeight - side) / 2 + yMin - 1 },\n        { x: tagWidth + xMin - 1, y: (tagHeight + side) / 2 + yMin + 1 },\n        { x: tagWidth + side + xMin, y: tagHeight / 2 + yMin }\n      ];\n\n      x = x - tagWidth - side;\n      y = y - tagHeight / 2;\n    } else if (direct === 'bl') {\n      arrowPoints = [\n        { x: tagWidth + xMin, y: -side + yMin },\n        { x: tagWidth + xMin - side - 1, y: yMin + 1 },\n        { x: tagWidth + xMin, y: yMin + 1 }\n      ];\n      radius[1] = 0;\n\n      x = x - tagWidth;\n      y = y + side;\n    } else if (direct === 'bc') {\n      arrowPoints = [\n        { x: tagWidth / 2 + xMin, y: -side + yMin },\n        { x: (tagWidth - side) / 2 + xMin - 1, y: yMin + 1 },\n        { x: (tagWidth + side) / 2 + xMin + 1, y: yMin + 1 }\n      ];\n      x = x - tagWidth / 2;\n      y = y + side;\n    } else if (direct === 'br') {\n      arrowPoints = [\n        { x: xMin, y: yMin - side },\n        { x: xMin, y: yMin + 1 },\n        { x: xMin + side + 1, y: yMin + 1 }\n      ];\n      radius[0] = 0;\n      y = y + side;\n    } else if (direct === 'cr') {\n      arrowPoints = [\n        { x: xMin - side, y: tagHeight / 2 + yMin },\n        { x: xMin + 1, y: (tagHeight - side) / 2 + yMin - 1 },\n        { x: xMin + 1, y: (tagHeight + side) / 2 + yMin + 1 }\n      ];\n      x = x + side;\n      y = y - tagHeight / 2;\n    } else if (direct === 'tr') {\n      arrowPoints = [\n        { x: xMin, y: tagHeight + side + yMin },\n        { x: xMin, y: tagHeight + yMin - 1 },\n        { x: side + xMin + 1, y: tagHeight + yMin - 1 }\n      ];\n      radius[3] = 0;\n\n      y = y - tagHeight - side;\n    } else if (direct === 'tc') {\n      arrowPoints = [\n        { x: (tagWidth - side) / 2 + xMin - 1, y: tagHeight + yMin - 1 },\n        { x: (tagWidth + side) / 2 + xMin + 1, y: tagHeight + yMin - 1 },\n        { x: tagWidth / 2 + xMin, y: tagHeight + side + yMin }\n      ];\n      x = x - tagWidth / 2;\n      y = y - tagHeight - side;\n    }\n\n    const sideShape = tagContainer.addShape('Polygon', {\n      className: 'guide-tag-side',\n      zIndex: 0,\n      attrs: {\n        points: arrowPoints,\n        fill: background.fill\n      }\n    });\n    shapes.push(sideShape);\n\n    tagBg.attr('radius', radius);\n    tagContainer.moveTo(x - xMin, y - yMin);\n    tagContainer.sort();\n\n    this.element = wrapperContainer;\n    return shapes;\n  }\n}\n\nGuideBase.Tag = Tag;\nmodule.exports = Tag;\n"]},"metadata":{},"sourceType":"script"}