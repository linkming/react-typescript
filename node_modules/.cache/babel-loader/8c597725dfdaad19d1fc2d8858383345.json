{"ast":null,"code":"const Util = require('../../util/common');\n\nconst Abstract = require('./abstract');\n\nclass Line extends Abstract {\n  _initDefaultCfg() {\n    super._initDefaultCfg();\n\n    this.start = null;\n    this.end = null;\n  }\n\n  getOffsetPoint(value) {\n    const {\n      start,\n      end\n    } = this;\n    return {\n      x: start.x + (end.x - start.x) * value,\n      y: start.y + (end.y - start.y) * value\n    };\n  }\n\n  getAxisVector() {\n    const {\n      start,\n      end\n    } = this;\n    return [end.x - start.x, end.y - start.y];\n  }\n\n  drawLine(lineCfg) {\n    const container = this.getContainer(lineCfg.top);\n    const {\n      start,\n      end\n    } = this;\n    container.addShape('line', {\n      className: 'axis-line',\n      attrs: Util.mix({\n        x1: start.x,\n        y1: start.y,\n        x2: end.x,\n        y2: end.y\n      }, lineCfg)\n    });\n  }\n\n}\n\nAbstract.Line = Line;\nmodule.exports = Line;","map":{"version":3,"sources":["/home/sunxuming/react-typescript/node_modules/_@antv_f2@3.6.0-alpha.2@@antv/f2/src/component/axis/line.js"],"names":["Util","require","Abstract","Line","_initDefaultCfg","start","end","getOffsetPoint","value","x","y","getAxisVector","drawLine","lineCfg","container","getContainer","top","addShape","className","attrs","mix","x1","y1","x2","y2","module","exports"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,mBAAD,CAApB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,YAAD,CAAxB;;AAEA,MAAME,IAAN,SAAmBD,QAAnB,CAA4B;AAC1BE,EAAAA,eAAe,GAAG;AAChB,UAAMA,eAAN;;AACA,SAAKC,KAAL,GAAa,IAAb;AACA,SAAKC,GAAL,GAAW,IAAX;AACD;;AAEDC,EAAAA,cAAc,CAACC,KAAD,EAAQ;AACpB,UAAM;AAAEH,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAiB,IAAvB;AACA,WAAO;AACLG,MAAAA,CAAC,EAAEJ,KAAK,CAACI,CAAN,GAAU,CAACH,GAAG,CAACG,CAAJ,GAAQJ,KAAK,CAACI,CAAf,IAAoBD,KAD5B;AAELE,MAAAA,CAAC,EAAEL,KAAK,CAACK,CAAN,GAAU,CAACJ,GAAG,CAACI,CAAJ,GAAQL,KAAK,CAACK,CAAf,IAAoBF;AAF5B,KAAP;AAID;;AAEDG,EAAAA,aAAa,GAAG;AACd,UAAM;AAAEN,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAiB,IAAvB;AACA,WAAO,CAAEA,GAAG,CAACG,CAAJ,GAAQJ,KAAK,CAACI,CAAhB,EAAmBH,GAAG,CAACI,CAAJ,GAAQL,KAAK,CAACK,CAAjC,CAAP;AACD;;AAEDE,EAAAA,QAAQ,CAACC,OAAD,EAAU;AAChB,UAAMC,SAAS,GAAG,KAAKC,YAAL,CAAkBF,OAAO,CAACG,GAA1B,CAAlB;AACA,UAAM;AAAEX,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAiB,IAAvB;AACAQ,IAAAA,SAAS,CAACG,QAAV,CAAmB,MAAnB,EAA2B;AACzBC,MAAAA,SAAS,EAAE,WADc;AAEzBC,MAAAA,KAAK,EAAEnB,IAAI,CAACoB,GAAL,CAAS;AACdC,QAAAA,EAAE,EAAEhB,KAAK,CAACI,CADI;AAEda,QAAAA,EAAE,EAAEjB,KAAK,CAACK,CAFI;AAGda,QAAAA,EAAE,EAAEjB,GAAG,CAACG,CAHM;AAIde,QAAAA,EAAE,EAAElB,GAAG,CAACI;AAJM,OAAT,EAKJG,OALI;AAFkB,KAA3B;AASD;;AAhCyB;;AAmC5BX,QAAQ,CAACC,IAAT,GAAgBA,IAAhB;AACAsB,MAAM,CAACC,OAAP,GAAiBvB,IAAjB","sourcesContent":["const Util = require('../../util/common');\nconst Abstract = require('./abstract');\n\nclass Line extends Abstract {\n  _initDefaultCfg() {\n    super._initDefaultCfg();\n    this.start = null;\n    this.end = null;\n  }\n\n  getOffsetPoint(value) {\n    const { start, end } = this;\n    return {\n      x: start.x + (end.x - start.x) * value,\n      y: start.y + (end.y - start.y) * value\n    };\n  }\n\n  getAxisVector() {\n    const { start, end } = this;\n    return [ end.x - start.x, end.y - start.y ];\n  }\n\n  drawLine(lineCfg) {\n    const container = this.getContainer(lineCfg.top);\n    const { start, end } = this;\n    container.addShape('line', {\n      className: 'axis-line',\n      attrs: Util.mix({\n        x1: start.x,\n        y1: start.y,\n        x2: end.x,\n        y2: end.y\n      }, lineCfg)\n    });\n  }\n}\n\nAbstract.Line = Line;\nmodule.exports = Line;\n"]},"metadata":{},"sourceType":"script"}