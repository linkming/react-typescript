{"ast":null,"code":"const Geom = require('./base');\n\nconst ShapeUtil = require('./shape/util');\n\nconst Util = require('../util/common');\n\nrequire('./shape/line');\n\nclass Path extends Geom {\n  getDefaultCfg() {\n    const cfg = super.getDefaultCfg();\n    cfg.type = 'path';\n    cfg.shapeType = 'line';\n    return cfg;\n  }\n\n  getDrawCfg(obj) {\n    const cfg = super.getDrawCfg(obj);\n    cfg.isStack = this.hasAdjust('stack');\n    return cfg;\n  }\n\n  draw(data, shapeFactory) {\n    const self = this;\n    const container = self.get('container');\n    const yScale = self.getYScale();\n    const connectNulls = self.get('connectNulls');\n    const splitArray = ShapeUtil.splitArray(data, yScale.field, connectNulls);\n    const cfg = this.getDrawCfg(data[0]);\n    cfg.origin = data;\n    Util.each(splitArray, function (subData, splitedIndex) {\n      cfg.splitedIndex = splitedIndex;\n      cfg.points = subData;\n      self.drawShape(cfg.shape, data[0], cfg, container, shapeFactory);\n    });\n  }\n\n}\n\nGeom.Path = Path;\nmodule.exports = Path;","map":{"version":3,"sources":["/home/sunxuming/react-typescript/node_modules/_@antv_f2@3.6.0-alpha.2@@antv/f2/src/geom/path.js"],"names":["Geom","require","ShapeUtil","Util","Path","getDefaultCfg","cfg","type","shapeType","getDrawCfg","obj","isStack","hasAdjust","draw","data","shapeFactory","self","container","get","yScale","getYScale","connectNulls","splitArray","field","origin","each","subData","splitedIndex","points","drawShape","shape","module","exports"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,cAAD,CAAzB;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,gBAAD,CAApB;;AACAA,OAAO,CAAC,cAAD,CAAP;;AAEA,MAAMG,IAAN,SAAmBJ,IAAnB,CAAwB;AACtBK,EAAAA,aAAa,GAAG;AACd,UAAMC,GAAG,GAAG,MAAMD,aAAN,EAAZ;AACAC,IAAAA,GAAG,CAACC,IAAJ,GAAW,MAAX;AACAD,IAAAA,GAAG,CAACE,SAAJ,GAAgB,MAAhB;AACA,WAAOF,GAAP;AACD;;AAEDG,EAAAA,UAAU,CAACC,GAAD,EAAM;AACd,UAAMJ,GAAG,GAAG,MAAMG,UAAN,CAAiBC,GAAjB,CAAZ;AACAJ,IAAAA,GAAG,CAACK,OAAJ,GAAc,KAAKC,SAAL,CAAe,OAAf,CAAd;AACA,WAAON,GAAP;AACD;;AAEDO,EAAAA,IAAI,CAACC,IAAD,EAAOC,YAAP,EAAqB;AACvB,UAAMC,IAAI,GAAG,IAAb;AACA,UAAMC,SAAS,GAAGD,IAAI,CAACE,GAAL,CAAS,WAAT,CAAlB;AACA,UAAMC,MAAM,GAAGH,IAAI,CAACI,SAAL,EAAf;AACA,UAAMC,YAAY,GAAGL,IAAI,CAACE,GAAL,CAAS,cAAT,CAArB;AACA,UAAMI,UAAU,GAAGpB,SAAS,CAACoB,UAAV,CAAqBR,IAArB,EAA2BK,MAAM,CAACI,KAAlC,EAAyCF,YAAzC,CAAnB;AAEA,UAAMf,GAAG,GAAG,KAAKG,UAAL,CAAgBK,IAAI,CAAC,CAAD,CAApB,CAAZ;AACAR,IAAAA,GAAG,CAACkB,MAAJ,GAAaV,IAAb;AAEAX,IAAAA,IAAI,CAACsB,IAAL,CAAUH,UAAV,EAAsB,UAASI,OAAT,EAAkBC,YAAlB,EAAgC;AACpDrB,MAAAA,GAAG,CAACqB,YAAJ,GAAmBA,YAAnB;AACArB,MAAAA,GAAG,CAACsB,MAAJ,GAAaF,OAAb;AACAV,MAAAA,IAAI,CAACa,SAAL,CAAevB,GAAG,CAACwB,KAAnB,EAA0BhB,IAAI,CAAC,CAAD,CAA9B,EAAmCR,GAAnC,EAAwCW,SAAxC,EAAmDF,YAAnD;AACD,KAJD;AAKD;;AA7BqB;;AAgCxBf,IAAI,CAACI,IAAL,GAAYA,IAAZ;AACA2B,MAAM,CAACC,OAAP,GAAiB5B,IAAjB","sourcesContent":["const Geom = require('./base');\nconst ShapeUtil = require('./shape/util');\nconst Util = require('../util/common');\nrequire('./shape/line');\n\nclass Path extends Geom {\n  getDefaultCfg() {\n    const cfg = super.getDefaultCfg();\n    cfg.type = 'path';\n    cfg.shapeType = 'line';\n    return cfg;\n  }\n\n  getDrawCfg(obj) {\n    const cfg = super.getDrawCfg(obj);\n    cfg.isStack = this.hasAdjust('stack');\n    return cfg;\n  }\n\n  draw(data, shapeFactory) {\n    const self = this;\n    const container = self.get('container');\n    const yScale = self.getYScale();\n    const connectNulls = self.get('connectNulls');\n    const splitArray = ShapeUtil.splitArray(data, yScale.field, connectNulls);\n\n    const cfg = this.getDrawCfg(data[0]);\n    cfg.origin = data;\n\n    Util.each(splitArray, function(subData, splitedIndex) {\n      cfg.splitedIndex = splitedIndex;\n      cfg.points = subData;\n      self.drawShape(cfg.shape, data[0], cfg, container, shapeFactory);\n    });\n  }\n}\n\nGeom.Path = Path;\nmodule.exports = Path;\n"]},"metadata":{},"sourceType":"script"}