{"ast":null,"code":"function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar Base = require('./base');\n\nvar catAuto = require('./auto/cat');\n\nvar each = require('@antv/util/lib/each');\n\nvar isNumber = require('@antv/util/lib/type/is-number');\n\nvar isString = require('@antv/util/lib/type/is-string');\n\nvar Category =\n/*#__PURE__*/\nfunction (_Base) {\n  _inheritsLoose(Category, _Base);\n\n  function Category() {\n    return _Base.apply(this, arguments) || this;\n  }\n\n  var _proto = Category.prototype;\n\n  _proto._initDefaultCfg = function _initDefaultCfg() {\n    _Base.prototype._initDefaultCfg.call(this);\n\n    this.type = 'cat';\n    /**\n     * 是否分类度量\n     * @type {Boolean}\n     */\n\n    this.isCategory = true;\n    this.isRounding = true; // 是否进行取整操作\n  }\n  /**\n   * @override\n   */\n  ;\n\n  _proto.init = function init() {\n    var self = this;\n    var values = self.values;\n    var tickCount = self.tickCount;\n    each(values, function (v, i) {\n      values[i] = v.toString();\n    });\n\n    if (!self.ticks) {\n      var ticks = values;\n\n      if (tickCount) {\n        var temp = catAuto({\n          maxCount: tickCount,\n          data: values,\n          isRounding: self.isRounding\n        });\n        ticks = temp.ticks;\n      }\n\n      this.ticks = ticks;\n    }\n  }\n  /**\n   * @override\n   */\n  ;\n\n  _proto.getText = function getText(value) {\n    if (this.values.indexOf(value) === -1 && isNumber(value)) {\n      value = this.values[Math.round(value)];\n    }\n\n    return _Base.prototype.getText.call(this, value);\n  }\n  /**\n   * @override\n   */\n  ;\n\n  _proto.translate = function translate(value) {\n    var index = this.values.indexOf(value);\n\n    if (index === -1 && isNumber(value)) {\n      index = value;\n    } else if (index === -1) {\n      index = NaN;\n    }\n\n    return index;\n  }\n  /**\n   * @override\n   */\n  ;\n\n  _proto.scale = function scale(value) {\n    var rangeMin = this.rangeMin();\n    var rangeMax = this.rangeMax();\n    var percent;\n\n    if (isString(value) || this.values.indexOf(value) !== -1) {\n      value = this.translate(value);\n    }\n\n    if (this.values.length > 1) {\n      percent = value / (this.values.length - 1);\n    } else {\n      percent = value;\n    }\n\n    return rangeMin + percent * (rangeMax - rangeMin);\n  }\n  /**\n   * @override\n   */\n  ;\n\n  _proto.invert = function invert(value) {\n    if (isString(value)) {\n      // 如果已经是字符串\n      return value;\n    }\n\n    var min = this.rangeMin();\n    var max = this.rangeMax(); // 归一到 范围内\n\n    if (value < min) {\n      value = min;\n    }\n\n    if (value > max) {\n      value = max;\n    }\n\n    var percent = (value - min) / (max - min);\n    var index = Math.round(percent * (this.values.length - 1)) % this.values.length;\n    index = index || 0;\n    return this.values[index];\n  };\n\n  return Category;\n}(Base);\n\nBase.Cat = Category;\nmodule.exports = Category;","map":{"version":3,"sources":["/home/sunxuming/react-typescript/node_modules/_@antv_scale@0.1.4@@antv/scale/lib/category.js"],"names":["_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","__proto__","Base","require","catAuto","each","isNumber","isString","Category","_Base","apply","arguments","_proto","_initDefaultCfg","call","type","isCategory","isRounding","init","self","values","tickCount","v","i","toString","ticks","temp","maxCount","data","getText","value","indexOf","Math","round","translate","index","NaN","scale","rangeMin","rangeMax","percent","length","invert","min","max","Cat","module","exports"],"mappings":"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","sourcesContent":["function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar Base = require('./base');\n\nvar catAuto = require('./auto/cat');\n\nvar each = require('@antv/util/lib/each');\n\nvar isNumber = require('@antv/util/lib/type/is-number');\n\nvar isString = require('@antv/util/lib/type/is-string');\n\nvar Category =\n/*#__PURE__*/\nfunction (_Base) {\n  _inheritsLoose(Category, _Base);\n\n  function Category() {\n    return _Base.apply(this, arguments) || this;\n  }\n\n  var _proto = Category.prototype;\n\n  _proto._initDefaultCfg = function _initDefaultCfg() {\n    _Base.prototype._initDefaultCfg.call(this);\n\n    this.type = 'cat';\n    /**\n     * 是否分类度量\n     * @type {Boolean}\n     */\n\n    this.isCategory = true;\n    this.isRounding = true; // 是否进行取整操作\n  }\n  /**\n   * @override\n   */\n  ;\n\n  _proto.init = function init() {\n    var self = this;\n    var values = self.values;\n    var tickCount = self.tickCount;\n    each(values, function (v, i) {\n      values[i] = v.toString();\n    });\n\n    if (!self.ticks) {\n      var ticks = values;\n\n      if (tickCount) {\n        var temp = catAuto({\n          maxCount: tickCount,\n          data: values,\n          isRounding: self.isRounding\n        });\n        ticks = temp.ticks;\n      }\n\n      this.ticks = ticks;\n    }\n  }\n  /**\n   * @override\n   */\n  ;\n\n  _proto.getText = function getText(value) {\n    if (this.values.indexOf(value) === -1 && isNumber(value)) {\n      value = this.values[Math.round(value)];\n    }\n\n    return _Base.prototype.getText.call(this, value);\n  }\n  /**\n   * @override\n   */\n  ;\n\n  _proto.translate = function translate(value) {\n    var index = this.values.indexOf(value);\n\n    if (index === -1 && isNumber(value)) {\n      index = value;\n    } else if (index === -1) {\n      index = NaN;\n    }\n\n    return index;\n  }\n  /**\n   * @override\n   */\n  ;\n\n  _proto.scale = function scale(value) {\n    var rangeMin = this.rangeMin();\n    var rangeMax = this.rangeMax();\n    var percent;\n\n    if (isString(value) || this.values.indexOf(value) !== -1) {\n      value = this.translate(value);\n    }\n\n    if (this.values.length > 1) {\n      percent = value / (this.values.length - 1);\n    } else {\n      percent = value;\n    }\n\n    return rangeMin + percent * (rangeMax - rangeMin);\n  }\n  /**\n   * @override\n   */\n  ;\n\n  _proto.invert = function invert(value) {\n    if (isString(value)) {\n      // 如果已经是字符串\n      return value;\n    }\n\n    var min = this.rangeMin();\n    var max = this.rangeMax(); // 归一到 范围内\n\n    if (value < min) {\n      value = min;\n    }\n\n    if (value > max) {\n      value = max;\n    }\n\n    var percent = (value - min) / (max - min);\n    var index = Math.round(percent * (this.values.length - 1)) % this.values.length;\n    index = index || 0;\n    return this.values[index];\n  };\n\n  return Category;\n}(Base);\n\nBase.Cat = Category;\nmodule.exports = Category;"]},"metadata":{},"sourceType":"script"}