{"ast":null,"code":"const Util = require('../util/common');\n\nconst {\n  Group\n} = require('../graphic/index');\n\nclass TextBox {\n  getDefaultCfg() {\n    return {\n      x: 0,\n      y: 0,\n      content: '',\n      textStyle: {\n        fontSize: 12,\n        fill: '#fff',\n        textAlign: 'center',\n        textBaseline: 'middle'\n      },\n      background: {\n        radius: 1,\n        fill: 'rgba(0, 0, 0, 0.65)',\n        padding: [3, 5]\n      },\n      width: 0,\n      height: 0,\n      className: ''\n    };\n  }\n\n  constructor(cfg) {\n    Util.deepMix(this, this.getDefaultCfg(), cfg);\n\n    this._init();\n\n    const {\n      content,\n      x,\n      y\n    } = this;\n\n    if (!Util.isNil(content)) {\n      this.updateContent(content);\n    }\n\n    this.updatePosition(x, y);\n  }\n\n  _init() {\n    const {\n      content,\n      textStyle,\n      background,\n      className,\n      visible\n    } = this;\n    const container = new Group({\n      className,\n      zIndex: 0,\n      visible\n    });\n    const text = container.addShape('Text', {\n      className: className + '-text',\n      zIndex: 1,\n      attrs: Util.mix({\n        text: content,\n        x: 0,\n        y: 0\n      }, textStyle)\n    });\n    const backgroundShape = container.addShape('Rect', {\n      className: className + '-bg',\n      zIndex: -1,\n      attrs: Util.mix({\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      }, background)\n    });\n    container.sort();\n    this.container = container;\n    this.textShape = text;\n    this.backgroundShape = backgroundShape;\n  }\n\n  _getBBox() {\n    const textShape = this.textShape;\n    const background = this.background;\n    const textBBox = textShape.getBBox();\n    const padding = Util.parsePadding(background.padding);\n    const width = textBBox.width + padding[1] + padding[3];\n    const height = textBBox.height + padding[0] + padding[2];\n    const x = textBBox.minX - padding[3];\n    const y = textBBox.minY - padding[0];\n    return {\n      x,\n      y,\n      width,\n      height\n    };\n  }\n\n  updateContent(text) {\n    const {\n      textShape,\n      backgroundShape\n    } = this;\n\n    if (!Util.isNil(text)) {\n      if (!Util.isObject(text)) {\n        text = {\n          text\n        };\n      }\n\n      textShape.attr(text); // update box shape\n\n      const {\n        x,\n        y,\n        width: tipWidth,\n        height: tipHeight\n      } = this._getBBox();\n\n      const width = this.width || tipWidth;\n      const height = this.height || tipHeight;\n      backgroundShape.attr({\n        x,\n        y,\n        width,\n        height\n      });\n      this._width = width;\n      this._height = height;\n      this.content = text.text;\n    }\n  }\n\n  updatePosition(x, y) {\n    const container = this.container;\n\n    const {\n      x: xMin,\n      y: yMin\n    } = this._getBBox();\n\n    container.moveTo(x - xMin, y - yMin);\n    this.x = x - xMin;\n    this.y = y - yMin;\n  }\n\n  getWidth() {\n    return this._width;\n  }\n\n  getHeight() {\n    return this._height;\n  }\n\n  show() {\n    this.container.show();\n  }\n\n  hide() {\n    this.container.hide();\n  }\n\n  clear() {\n    const container = this.container;\n    container.clear();\n    container.remove(true);\n    this.container = null;\n    this.textShape = null;\n    this.backgroundShape = null;\n  }\n\n}\n\nmodule.exports = TextBox;","map":{"version":3,"sources":["/home/sunxuming/react-typescript/node_modules/_@antv_f2@3.6.0-alpha.2@@antv/f2/src/component/text-box.js"],"names":["Util","require","Group","TextBox","getDefaultCfg","x","y","content","textStyle","fontSize","fill","textAlign","textBaseline","background","radius","padding","width","height","className","constructor","cfg","deepMix","_init","isNil","updateContent","updatePosition","visible","container","zIndex","text","addShape","attrs","mix","backgroundShape","sort","textShape","_getBBox","textBBox","getBBox","parsePadding","minX","minY","isObject","attr","tipWidth","tipHeight","_width","_height","xMin","yMin","moveTo","getWidth","getHeight","show","hide","clear","remove","module","exports"],"mappings":"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","sourcesContent":["const Util = require('../util/common');\nconst { Group } = require('../graphic/index');\n\nclass TextBox {\n  getDefaultCfg() {\n    return {\n      x: 0,\n      y: 0,\n      content: '',\n      textStyle: {\n        fontSize: 12,\n        fill: '#fff',\n        textAlign: 'center',\n        textBaseline: 'middle'\n      },\n      background: {\n        radius: 1,\n        fill: 'rgba(0, 0, 0, 0.65)',\n        padding: [ 3, 5 ]\n      },\n      width: 0,\n      height: 0,\n      className: ''\n    };\n  }\n\n  constructor(cfg) {\n    Util.deepMix(this, this.getDefaultCfg(), cfg);\n    this._init();\n    const { content, x, y } = this;\n\n    if (!Util.isNil(content)) {\n      this.updateContent(content);\n    }\n\n    this.updatePosition(x, y);\n  }\n\n  _init() {\n    const { content, textStyle, background, className, visible } = this;\n    const container = new Group({\n      className,\n      zIndex: 0,\n      visible\n    });\n    const text = container.addShape('Text', {\n      className: className + '-text',\n      zIndex: 1,\n      attrs: Util.mix({\n        text: content,\n        x: 0,\n        y: 0\n      }, textStyle)\n    });\n    const backgroundShape = container.addShape('Rect', {\n      className: className + '-bg',\n      zIndex: -1,\n      attrs: Util.mix({\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      }, background)\n    });\n    container.sort();\n    this.container = container;\n    this.textShape = text;\n    this.backgroundShape = backgroundShape;\n  }\n\n  _getBBox() {\n    const textShape = this.textShape;\n    const background = this.background;\n    const textBBox = textShape.getBBox();\n    const padding = Util.parsePadding(background.padding);\n    const width = textBBox.width + padding[1] + padding[3];\n    const height = textBBox.height + padding[0] + padding[2];\n    const x = textBBox.minX - padding[3];\n    const y = textBBox.minY - padding[0];\n    return {\n      x,\n      y,\n      width,\n      height\n    };\n  }\n\n  updateContent(text) {\n    const { textShape, backgroundShape } = this;\n    if (!Util.isNil(text)) {\n      if (!Util.isObject(text)) {\n        text = { text };\n      }\n      textShape.attr(text);\n      // update box shape\n      const { x, y, width: tipWidth, height: tipHeight } = this._getBBox();\n      const width = this.width || tipWidth;\n      const height = this.height || tipHeight;\n      backgroundShape.attr({\n        x,\n        y,\n        width,\n        height\n      });\n      this._width = width;\n      this._height = height;\n      this.content = text.text;\n    }\n  }\n\n  updatePosition(x, y) {\n    const container = this.container;\n    const { x: xMin, y: yMin } = this._getBBox();\n    container.moveTo(x - xMin, y - yMin);\n    this.x = x - xMin;\n    this.y = y - yMin;\n  }\n\n  getWidth() {\n    return this._width;\n  }\n\n  getHeight() {\n    return this._height;\n  }\n\n  show() {\n    this.container.show();\n  }\n\n  hide() {\n    this.container.hide();\n  }\n\n  clear() {\n    const container = this.container;\n    container.clear();\n    container.remove(true);\n    this.container = null;\n    this.textShape = null;\n    this.backgroundShape = null;\n  }\n}\n\nmodule.exports = TextBox;\n"]},"metadata":{},"sourceType":"script"}