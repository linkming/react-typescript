{"ast":null,"code":"/**\n * Group animate functions\n * @author sima.zhang1990@gmail.com\n */\nconst Util = require('./util');\n\nconst Helper = require('../util/helper');\n\nconst {\n  Shape\n} = require('../graphic/index');\n\nfunction _groupScaleIn(container, animateCfg, coord, zeroY, type) {\n  const {\n    start,\n    end,\n    width,\n    height\n  } = Util.getCoordInfo(coord);\n  let x;\n  let y;\n  const clip = new Shape.Rect({\n    attrs: {\n      x: start.x,\n      y: end.y,\n      width,\n      height\n    }\n  });\n\n  if (type === 'y') {\n    x = start.x + width / 2;\n    y = zeroY.y < start.y ? zeroY.y : start.y;\n  } else if (type === 'x') {\n    x = zeroY.x > start.x ? zeroY.x : start.x;\n    y = start.y + height / 2;\n  } else if (type === 'xy') {\n    if (coord.isPolar) {\n      x = coord.center.x;\n      y = coord.center.y;\n    } else {\n      x = (start.x + end.x) / 2;\n      y = (start.y + end.y) / 2;\n    }\n  }\n\n  const endMatrix = Util.getScaledMatrix(clip, [x, y], type);\n  clip.isClip = true;\n  clip.endState = {\n    matrix: endMatrix\n  };\n  clip.set('canvas', container.get('canvas'));\n  container.attr('clip', clip);\n\n  const onEnd = function () {\n    container.attr('clip', null);\n    clip.remove(true);\n  };\n\n  Util.doAnimation(clip, clip.endState, animateCfg, onEnd);\n}\n\nfunction _shapeScale(container, animateCfg, type) {\n  const shapes = container.get('children');\n  let x;\n  let y;\n  let endMatrix;\n\n  for (let i = 0, len = shapes.length; i < len; i++) {\n    const shape = shapes[i];\n    const box = shape.getBBox();\n    x = (box.minX + box.maxX) / 2;\n    y = (box.minY + box.maxY) / 2;\n    endMatrix = Util.getScaledMatrix(shape, [x, y], type);\n    Util.doAnimation(shape, {\n      matrix: endMatrix\n    }, animateCfg);\n  }\n}\n\nfunction groupScaleInX(container, animateCfg, coord, zeroY) {\n  _groupScaleIn(container, animateCfg, coord, zeroY, 'x');\n}\n\nfunction groupScaleInY(container, animateCfg, coord, zeroY) {\n  _groupScaleIn(container, animateCfg, coord, zeroY, 'y');\n}\n\nfunction groupScaleInXY(container, animateCfg, coord, zeroY) {\n  _groupScaleIn(container, animateCfg, coord, zeroY, 'xy');\n}\n\nfunction shapesScaleInX(container, animateCfg) {\n  _shapeScale(container, animateCfg, 'x');\n}\n\nfunction shapesScaleInY(container, animateCfg) {\n  _shapeScale(container, animateCfg, 'y');\n}\n\nfunction shapesScaleInXY(container, animateCfg) {\n  _shapeScale(container, animateCfg, 'xy');\n}\n\nfunction groupWaveIn(container, animateCfg, coord) {\n  const clip = Helper.getClip(coord);\n  clip.set('canvas', container.get('canvas'));\n  container.attr('clip', clip);\n\n  const onEnd = function () {\n    container.attr('clip', null);\n    clip.remove(true);\n  };\n\n  const endState = {};\n\n  if (coord.isPolar) {\n    const {\n      startAngle,\n      endAngle\n    } = coord;\n    endState.endAngle = endAngle;\n    clip.attr('endAngle', startAngle);\n  } else {\n    const {\n      start,\n      end\n    } = coord;\n    const width = Math.abs(start.x - end.x);\n    const height = Math.abs(start.y - end.y);\n\n    if (coord.isTransposed) {\n      clip.attr('height', 0);\n      endState.height = height;\n    } else {\n      clip.attr('width', 0);\n      endState.width = width;\n    }\n  }\n\n  Util.doAnimation(clip, endState, animateCfg, onEnd);\n}\n\nmodule.exports = {\n  groupWaveIn,\n  groupScaleInX,\n  groupScaleInY,\n  groupScaleInXY,\n  shapesScaleInX,\n  shapesScaleInY,\n  shapesScaleInXY\n};","map":{"version":3,"sources":["/home/sunxuming/react-typescript/node_modules/_@antv_f2@3.6.0-alpha.2@@antv/f2/src/animation/group-action.js"],"names":["Util","require","Helper","Shape","_groupScaleIn","container","animateCfg","coord","zeroY","type","start","end","width","height","getCoordInfo","x","y","clip","Rect","attrs","isPolar","center","endMatrix","getScaledMatrix","isClip","endState","matrix","set","get","attr","onEnd","remove","doAnimation","_shapeScale","shapes","i","len","length","shape","box","getBBox","minX","maxX","minY","maxY","groupScaleInX","groupScaleInY","groupScaleInXY","shapesScaleInX","shapesScaleInY","shapesScaleInXY","groupWaveIn","getClip","startAngle","endAngle","Math","abs","isTransposed","module","exports"],"mappings":"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","sourcesContent":["/**\n * Group animate functions\n * @author sima.zhang1990@gmail.com\n */\nconst Util = require('./util');\nconst Helper = require('../util/helper');\nconst { Shape } = require('../graphic/index');\n\nfunction _groupScaleIn(container, animateCfg, coord, zeroY, type) {\n  const { start, end, width, height } = Util.getCoordInfo(coord);\n  let x;\n  let y;\n\n  const clip = new Shape.Rect({\n    attrs: {\n      x: start.x,\n      y: end.y,\n      width,\n      height\n    }\n  });\n\n  if (type === 'y') {\n    x = start.x + width / 2;\n    y = zeroY.y < start.y ? zeroY.y : start.y;\n  } else if (type === 'x') {\n    x = zeroY.x > start.x ? zeroY.x : start.x;\n    y = start.y + height / 2;\n  } else if (type === 'xy') {\n    if (coord.isPolar) {\n      x = coord.center.x;\n      y = coord.center.y;\n    } else {\n      x = (start.x + end.x) / 2;\n      y = (start.y + end.y) / 2;\n    }\n  }\n\n  const endMatrix = Util.getScaledMatrix(clip, [ x, y ], type);\n  clip.isClip = true;\n  clip.endState = {\n    matrix: endMatrix\n  };\n\n  clip.set('canvas', container.get('canvas'));\n  container.attr('clip', clip);\n  const onEnd = function() {\n    container.attr('clip', null);\n    clip.remove(true);\n  };\n  Util.doAnimation(clip, clip.endState, animateCfg, onEnd);\n}\n\nfunction _shapeScale(container, animateCfg, type) {\n  const shapes = container.get('children');\n  let x;\n  let y;\n  let endMatrix;\n\n  for (let i = 0, len = shapes.length; i < len; i++) {\n    const shape = shapes[i];\n    const box = shape.getBBox();\n    x = (box.minX + box.maxX) / 2;\n    y = (box.minY + box.maxY) / 2;\n    endMatrix = Util.getScaledMatrix(shape, [ x, y ], type);\n    Util.doAnimation(shape, { matrix: endMatrix }, animateCfg);\n  }\n}\n\nfunction groupScaleInX(container, animateCfg, coord, zeroY) {\n  _groupScaleIn(container, animateCfg, coord, zeroY, 'x');\n}\n\nfunction groupScaleInY(container, animateCfg, coord, zeroY) {\n  _groupScaleIn(container, animateCfg, coord, zeroY, 'y');\n}\n\nfunction groupScaleInXY(container, animateCfg, coord, zeroY) {\n  _groupScaleIn(container, animateCfg, coord, zeroY, 'xy');\n}\n\nfunction shapesScaleInX(container, animateCfg) {\n  _shapeScale(container, animateCfg, 'x');\n}\n\nfunction shapesScaleInY(container, animateCfg) {\n  _shapeScale(container, animateCfg, 'y');\n}\n\nfunction shapesScaleInXY(container, animateCfg) {\n  _shapeScale(container, animateCfg, 'xy');\n}\n\nfunction groupWaveIn(container, animateCfg, coord) {\n  const clip = Helper.getClip(coord);\n  clip.set('canvas', container.get('canvas'));\n  container.attr('clip', clip);\n  const onEnd = function() {\n    container.attr('clip', null);\n    clip.remove(true);\n  };\n  const endState = {};\n  if (coord.isPolar) {\n    const { startAngle, endAngle } = coord;\n    endState.endAngle = endAngle;\n    clip.attr('endAngle', startAngle);\n  } else {\n    const { start, end } = coord;\n    const width = Math.abs(start.x - end.x);\n    const height = Math.abs(start.y - end.y);\n    if (coord.isTransposed) {\n      clip.attr('height', 0);\n      endState.height = height;\n    } else {\n      clip.attr('width', 0);\n      endState.width = width;\n    }\n  }\n  Util.doAnimation(clip, endState, animateCfg, onEnd);\n}\n\nmodule.exports = {\n  groupWaveIn,\n  groupScaleInX,\n  groupScaleInY,\n  groupScaleInXY,\n  shapesScaleInX,\n  shapesScaleInY,\n  shapesScaleInXY\n};\n"]},"metadata":{},"sourceType":"script"}