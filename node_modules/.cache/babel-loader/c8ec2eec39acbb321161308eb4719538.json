{"ast":null,"code":"import axios from 'axios';\naxios.interceptors.response.use(response => {\n  console.log(response);\n\n  if (response.status === 200) {\n    return response.data;\n  }\n}, error => {\n  return Promise.reject(error);\n});\nexport default {\n  getSongs() {\n    return axios({\n      headers: {\n        referer: 'https://c.y.qq.com',\n        host: 'c.y.qq.com'\n      },\n      method: 'get',\n      url: '/soso/fcgi-bin/search_for_qq_cp?_=1582883790354&g_tk=5381&uin=&format=json&inCharset=utf-8&outCharset=utf-8&notice=0&platform=h5&needNewCode=1&w= &zhidaqu=1&catZhida=1&t=0&flag=1&ie=utf-8&sem=1&aggr=0&perpage=20&n=20&p=2&remoteplace=txt.mqq.all'\n    });\n  },\n\n  example() {\n    return axios({\n      url: '/api/base/fcgi-bin/fcg_global_comment_h5.fcg',\n      method: 'get',\n      params: {\n        g_tk: 5381,\n        uin: 0,\n        format: 'json',\n        inCharset: 'utf-8',\n        outCharset: 'utf-8',\n        notice: 0,\n        platform: 'h5',\n        needNewCode: 1,\n        cid: 205360772,\n        reqtype: 1,\n        cmd: 8,\n        needmusiccrit: 0,\n        pagesize: 3,\n        lasthotcommentid: 0,\n        qq: 0,\n        pagenum: 0,\n        biztype: 1,\n        topid: 105468975,\n        ct: 999,\n        _: new Date().valueOf(),\n        msg_comment_id: 0\n      }\n    });\n  },\n\n  searchSongsByName(songsName) {\n    return axios({\n      method: 'get',\n      url: '/songs',\n      params: {\n        songsName\n      }\n    });\n  },\n\n  searchSongsBySinger(singer) {\n    return axios({\n      method: 'get',\n      url: '/singer',\n      params: {\n        singer\n      }\n    });\n  },\n\n  comments(id) {\n    return axios({\n      method: 'get',\n      url: '/cloudmusic',\n      params: {\n        type: 'comments',\n        id\n      }\n    });\n  }\n\n};","map":{"version":3,"sources":["/home/sunxuming/react-typescript/src/api/index.ts"],"names":["axios","interceptors","response","use","console","log","status","data","error","Promise","reject","getSongs","headers","referer","host","method","url","example","params","g_tk","uin","format","inCharset","outCharset","notice","platform","needNewCode","cid","reqtype","cmd","needmusiccrit","pagesize","lasthotcommentid","qq","pagenum","biztype","topid","ct","_","Date","valueOf","msg_comment_id","searchSongsByName","songsName","searchSongsBySinger","singer","comments","id","type"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAoBAA,KAAK,CAACC,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAgCD,QAAQ,IAAI;AAC1CE,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,MAAIA,QAAQ,CAACI,MAAT,KAAkB,GAAtB,EAA2B;AACzB,WAAOJ,QAAQ,CAACK,IAAhB;AACD;AACF,CALD,EAMCC,KAAD,IAAgB;AACd,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CARD;AASA,eAAe;AACXG,EAAAA,QAAQ,GAAG;AACT,WAAOX,KAAK,CAAC;AACXY,MAAAA,OAAO,EAAC;AACNC,QAAAA,OAAO,EAAE,oBADH;AAENC,QAAAA,IAAI,EAAE;AAFA,OADG;AAKXC,MAAAA,MAAM,EAAE,KALG;AAMXC,MAAAA,GAAG,EAAE;AANM,KAAD,CAAZ;AAQD,GAVU;;AAWXC,EAAAA,OAAO,GAAE;AACP,WAAOjB,KAAK,CAAC;AACXgB,MAAAA,GAAG,EAAE,8CADM;AAEXD,MAAAA,MAAM,EAAE,KAFG;AAGXG,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,IADA;AAENC,QAAAA,GAAG,EAAE,CAFC;AAGNC,QAAAA,MAAM,EAAE,MAHF;AAINC,QAAAA,SAAS,EAAE,OAJL;AAKNC,QAAAA,UAAU,EAAE,OALN;AAMNC,QAAAA,MAAM,EAAE,CANF;AAONC,QAAAA,QAAQ,EAAE,IAPJ;AAQNC,QAAAA,WAAW,EAAE,CARP;AASNC,QAAAA,GAAG,EAAE,SATC;AAUNC,QAAAA,OAAO,EAAE,CAVH;AAWNC,QAAAA,GAAG,EAAE,CAXC;AAYNC,QAAAA,aAAa,EAAE,CAZT;AAaNC,QAAAA,QAAQ,EAAE,CAbJ;AAcNC,QAAAA,gBAAgB,EAAE,CAdZ;AAeNC,QAAAA,EAAE,EAAE,CAfE;AAgBNC,QAAAA,OAAO,EAAE,CAhBH;AAiBNC,QAAAA,OAAO,EAAE,CAjBH;AAkBNC,QAAAA,KAAK,EAAE,SAlBD;AAmBNC,QAAAA,EAAE,EAAE,GAnBE;AAoBNC,QAAAA,CAAC,EAAE,IAAIC,IAAJ,GAAWC,OAAX,EApBG;AAqBNC,QAAAA,cAAc,EAAE;AArBV;AAHG,KAAD,CAAZ;AA2BD,GAvCU;;AAwCXC,EAAAA,iBAAiB,CAACC,SAAD,EAAmB;AAClC,WAAO3C,KAAK,CAAC;AACXe,MAAAA,MAAM,EAAE,KADG;AAEXC,MAAAA,GAAG,EAAE,QAFM;AAGXE,MAAAA,MAAM,EAAE;AACNyB,QAAAA;AADM;AAHG,KAAD,CAAZ;AAOD,GAhDU;;AAiDXC,EAAAA,mBAAmB,CAACC,MAAD,EAAgB;AACjC,WAAO7C,KAAK,CAAC;AACXe,MAAAA,MAAM,EAAE,KADG;AAEXC,MAAAA,GAAG,EAAE,SAFM;AAGXE,MAAAA,MAAM,EAAE;AACN2B,QAAAA;AADM;AAHG,KAAD,CAAZ;AAOD,GAzDU;;AA0DXC,EAAAA,QAAQ,CAACC,EAAD,EAAY;AAClB,WAAO/C,KAAK,CAAC;AACXe,MAAAA,MAAM,EAAE,KADG;AAEXC,MAAAA,GAAG,EAAE,aAFM;AAGXE,MAAAA,MAAM,EAAE;AACN8B,QAAAA,IAAI,EAAE,UADA;AAEND,QAAAA;AAFM;AAHG,KAAD,CAAZ;AAQD;;AAnEU,CAAf","sourcesContent":["import axios from 'axios'\n\ninterface AxiosRequestConfig {\n  url: string;\n  method?: string;\n  headers?: any;\n  data?: any;\n  params?: any;\n  responseType?: XMLHttpRequestResponseType;\n}\ninterface AxiosResponse {\n  data: any; // 服务端返回的数据\n  status: number; // HTTP 状态码\n  statusText: string; // 状态消息\n  headers: any; // 响应头\n  config: AxiosRequestConfig; // 请求配置对象\n  request: any; // 请求的 XMLHttpRequest 对象实例\n}\ninterface AxiosPromise extends Promise<AxiosResponse> {\n}\naxios.interceptors.response.use(response => {\n  console.log(response)\n  if (response.status===200) {\n    return response.data;\n  }\n},\n(error: any) => {\n  return Promise.reject(error);\n})\nexport default {\n    getSongs() {\n      return axios({\n        headers:{\n          referer: 'https://c.y.qq.com',\n          host: 'c.y.qq.com'\n        },\n        method: 'get',\n        url: '/soso/fcgi-bin/search_for_qq_cp?_=1582883790354&g_tk=5381&uin=&format=json&inCharset=utf-8&outCharset=utf-8&notice=0&platform=h5&needNewCode=1&w= &zhidaqu=1&catZhida=1&t=0&flag=1&ie=utf-8&sem=1&aggr=0&perpage=20&n=20&p=2&remoteplace=txt.mqq.all',\n      })\n    },\n    example(){\n      return axios({\n        url: '/api/base/fcgi-bin/fcg_global_comment_h5.fcg',\n        method: 'get',\n        params: {\n          g_tk: 5381,\n          uin: 0,\n          format: 'json',\n          inCharset: 'utf-8',\n          outCharset: 'utf-8',\n          notice: 0,\n          platform: 'h5',\n          needNewCode: 1,\n          cid: 205360772,\n          reqtype: 1,\n          cmd: 8,\n          needmusiccrit: 0,\n          pagesize: 3,\n          lasthotcommentid: 0,\n          qq: 0,\n          pagenum: 0,\n          biztype: 1,\n          topid: 105468975,\n          ct: 999,\n          _: new Date().valueOf(),\n          msg_comment_id: 0\n        }\n      })\n    },\n    searchSongsByName(songsName:String) {\n      return axios({\n        method: 'get',\n        url: '/songs',\n        params: {\n          songsName\n        }\n      })\n    },\n    searchSongsBySinger(singer:String) {\n      return axios({\n        method: 'get',\n        url: '/singer',\n        params: {\n          singer\n        }\n      })\n    },\n    comments(id:Number) {\n      return axios({\n        method: 'get',\n        url: '/cloudmusic',\n        params: {\n          type: 'comments',\n          id\n        }\n      })\n    }\n  }"]},"metadata":{},"sourceType":"module"}