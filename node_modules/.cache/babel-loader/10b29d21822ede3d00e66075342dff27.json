{"ast":null,"code":"const Easing = require('./easing');\n\nfunction plainArray(arr) {\n  const result = [];\n\n  for (let i = 0, len = arr.length; i < len; i++) {\n    if (arr[i]) {\n      result.push(arr[i].x);\n      result.push(arr[i].y);\n    }\n  }\n\n  return result;\n}\n\nfunction interpolateNumber(a, b) {\n  a = +a;\n  b -= a;\n  return function (t) {\n    return a + b * t;\n  };\n}\n\nfunction interpolateArray(a, b) {\n  const nb = b ? b.length : 0;\n  const na = a ? Math.min(nb, a.length) : 0;\n  const x = new Array(na);\n  const c = new Array(nb);\n  let i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateNumber(a[i], b[i]);\n\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function (t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n\n    return c;\n  };\n}\n\nclass Animator {\n  constructor(shape, source, timeline) {\n    this.hasStarted = false;\n    this.hasEnded = false;\n    this.shape = shape;\n    this.source = source;\n    this.timeline = timeline;\n    this.animate = null;\n  } // delay, attrs, duration, easing\n\n\n  to(cfg = {}) {\n    const delay = cfg.delay || 0;\n    const attrs = cfg.attrs || {};\n    const duration = cfg.duration || 1000;\n    let easing; // 缓动函数\n\n    if (typeof cfg.easing === 'function') {\n      easing = cfg.easing;\n    } else {\n      easing = Easing[cfg.easing] || Easing.linear;\n    }\n\n    const animInfo = {\n      shape: this.shape,\n      startTime: this.timeline.time + delay,\n      duration,\n      easing\n    };\n    const interpolate = {}; // 差值函数\n\n    for (const attrName in attrs) {\n      let startValue = this.source[attrName];\n      let endValue = attrs[attrName];\n\n      if (attrName === 'points') {\n        startValue = plainArray(startValue);\n        endValue = plainArray(endValue);\n        interpolate.points = interpolateArray(startValue, endValue);\n        this.source.points = startValue;\n        attrs.points = endValue;\n      } else if (attrName === 'matrix') {\n        interpolate.matrix = interpolateArray(startValue, endValue);\n      } else {\n        interpolate[attrName] = interpolateNumber(startValue, endValue);\n      }\n    }\n\n    animInfo.interpolate = interpolate;\n    animInfo.startState = this.source;\n    animInfo.endState = attrs;\n    animInfo.endTime = animInfo.startTime + duration;\n    this.timeline.anims.push(animInfo);\n    this.animate = animInfo;\n    return this;\n  }\n\n  onFrame(callback) {\n    // 自定义每一帧动画的动作\n    if (this.animate) {\n      this.animate.onFrame = function (frame) {\n        callback(frame);\n      };\n    }\n\n    return this;\n  }\n\n  onStart(callback) {\n    if (this.animate) {\n      this.animate.onStart = function () {\n        callback();\n      };\n    }\n\n    return this;\n  }\n\n  onUpdate(callback) {\n    if (this.animate) {\n      this.animate.onUpdate = function (frame) {\n        callback(frame);\n      };\n    }\n\n    return this;\n  }\n\n  onEnd(callback) {\n    if (this.animate) {\n      this.animate.onEnd = function () {\n        callback();\n      };\n    }\n\n    return this;\n  }\n\n}\n\nmodule.exports = Animator;","map":{"version":3,"sources":["/home/sunxuming/react-typescript/node_modules/_@antv_f2@3.6.0-alpha.2@@antv/f2/src/graphic/animate/animator.js"],"names":["Easing","require","plainArray","arr","result","i","len","length","push","x","y","interpolateNumber","a","b","t","interpolateArray","nb","na","Math","min","Array","c","Animator","constructor","shape","source","timeline","hasStarted","hasEnded","animate","to","cfg","delay","attrs","duration","easing","linear","animInfo","startTime","time","interpolate","attrName","startValue","endValue","points","matrix","startState","endState","endTime","anims","onFrame","callback","frame","onStart","onUpdate","onEnd","module","exports"],"mappings":"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","sourcesContent":["const Easing = require('./easing');\n\nfunction plainArray(arr) {\n  const result = [];\n  for (let i = 0, len = arr.length; i < len; i++) {\n    if (arr[i]) {\n      result.push(arr[i].x);\n      result.push(arr[i].y);\n    }\n  }\n  return result;\n}\n\nfunction interpolateNumber(a, b) {\n  a = +a;\n  b -= a;\n  return function(t) {\n    return a + b * t;\n  };\n}\n\nfunction interpolateArray(a, b) {\n  const nb = b ? b.length : 0;\n  const na = a ? Math.min(nb, a.length) : 0;\n  const x = new Array(na);\n  const c = new Array(nb);\n  let i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateNumber(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n\nclass Animator {\n  constructor(shape, source, timeline) {\n    this.hasStarted = false;\n    this.hasEnded = false;\n    this.shape = shape;\n    this.source = source;\n    this.timeline = timeline;\n    this.animate = null;\n  }\n\n  // delay, attrs, duration, easing\n  to(cfg = {}) {\n    const delay = cfg.delay || 0;\n    const attrs = cfg.attrs || {};\n    const duration = cfg.duration || 1000;\n\n    let easing; // 缓动函数\n    if (typeof (cfg.easing) === 'function') {\n      easing = cfg.easing;\n    } else {\n      easing = Easing[cfg.easing] || Easing.linear;\n    }\n\n    const animInfo = {\n      shape: this.shape,\n      startTime: this.timeline.time + delay,\n      duration,\n      easing\n    };\n\n    const interpolate = {}; // 差值函数\n    for (const attrName in attrs) {\n      let startValue = this.source[attrName];\n      let endValue = attrs[attrName];\n      if (attrName === 'points') {\n        startValue = plainArray(startValue);\n        endValue = plainArray(endValue);\n        interpolate.points = interpolateArray(startValue, endValue);\n        this.source.points = startValue;\n        attrs.points = endValue;\n      } else if (attrName === 'matrix') {\n        interpolate.matrix = interpolateArray(startValue, endValue);\n      } else {\n        interpolate[attrName] = interpolateNumber(startValue, endValue);\n      }\n    }\n    animInfo.interpolate = interpolate;\n    animInfo.startState = this.source;\n    animInfo.endState = attrs;\n    animInfo.endTime = animInfo.startTime + duration;\n\n    this.timeline.anims.push(animInfo);\n    this.animate = animInfo;\n    return this;\n  }\n\n  onFrame(callback) { // 自定义每一帧动画的动作\n    if (this.animate) {\n      this.animate.onFrame = function(frame) {\n        callback(frame);\n      };\n    }\n\n    return this;\n  }\n\n  onStart(callback) {\n    if (this.animate) {\n      this.animate.onStart = function() {\n        callback();\n      };\n    }\n\n    return this;\n  }\n\n  onUpdate(callback) {\n    if (this.animate) {\n      this.animate.onUpdate = function(frame) {\n        callback(frame);\n      };\n    }\n\n    return this;\n  }\n\n  onEnd(callback) {\n    if (this.animate) {\n      this.animate.onEnd = function() {\n        callback();\n      };\n    }\n\n    return this;\n  }\n}\n\nmodule.exports = Animator;\n"]},"metadata":{},"sourceType":"script"}