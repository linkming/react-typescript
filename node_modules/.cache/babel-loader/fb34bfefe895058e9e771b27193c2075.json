{"ast":null,"code":"function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n/**\n * @fileOverview The measurement of linear data scale function\n * @author dxq613@gmail.com\n */\n\n\nvar isNil = require('@antv/util/lib/type/is-nil');\n\nvar each = require('@antv/util/lib/each');\n\nvar Base = require('./base');\n\nvar numberAuto = require('./auto/number');\n/**\n * 线性度量\n * @class Scale.Linear\n */\n\n\nvar Linear =\n/*#__PURE__*/\nfunction (_Base) {\n  _inheritsLoose(Linear, _Base);\n\n  function Linear() {\n    return _Base.apply(this, arguments) || this;\n  }\n\n  var _proto = Linear.prototype;\n\n  _proto._initDefaultCfg = function _initDefaultCfg() {\n    _Base.prototype._initDefaultCfg.call(this);\n\n    var self = this;\n    self.type = 'linear';\n    self.isLinear = true;\n    /**\n     * 是否为了用户习惯，优化min,max和ticks，如果进行优化，则会根据生成的ticks调整min,max，否则舍弃(min,max)范围之外的ticks\n     * @type {Boolean}\n     * @default false\n     */\n\n    self.nice = false;\n    /**\n     * min value of the scale\n     * @type {Number}\n     * @default null\n     */\n\n    self.min = null;\n    /**\n     * min value limitted of the scale\n     * @type {Number}\n     * @default null\n     */\n\n    self.minLimit = null;\n    /**\n     * max value of the scale\n     * @type {Number}\n     * @default null\n     */\n\n    self.max = null;\n    /**\n     * max value limitted of the scale\n     * @type {Number}\n     * @default null\n     */\n\n    self.maxLimit = null;\n    /**\n     * 自动生成标记时的个数\n     * @type {Number}\n     * @default null\n     */\n\n    self.tickCount = null;\n    /**\n     * 坐标轴点之间的间距，指的是真实数据的差值\n     * @type {Number}\n     * @default null\n     */\n\n    self.tickInterval = null;\n    /**\n     * 坐标轴点之间的最小间距，指的是真实数据的差值\n     * @type {Number}\n     * @default null\n     */\n\n    self.minTickInterval = null;\n    /**\n     * 用于计算坐标点时逼近的数组\n     * @type {Array}\n     */\n\n    self.snapArray = null;\n  }\n  /**\n   * @protected\n   * @override\n   */\n  ;\n\n  _proto.init = function init() {\n    var self = this;\n\n    if (!self.ticks) {\n      self.min = self.translate(self.min);\n      self.max = self.translate(self.max);\n      self.initTicks();\n    } else {\n      var ticks = self.ticks;\n      var firstValue = self.translate(ticks[0]);\n      var lastValue = self.translate(ticks[ticks.length - 1]);\n\n      if (isNil(self.min) || self.min > firstValue) {\n        self.min = firstValue;\n      }\n\n      if (isNil(self.max) || self.max < lastValue) {\n        self.max = lastValue;\n      }\n    }\n  }\n  /**\n   * 计算坐标点\n   * @protected\n   * @return {Array} 计算完成的坐标点\n   */\n  ;\n\n  _proto.calculateTicks = function calculateTicks() {\n    var min = this.min,\n        max = this.max,\n        minLimit = this.minLimit,\n        maxLimit = this.maxLimit,\n        tickCount = this.tickCount,\n        tickInterval = this.tickInterval,\n        minTickInterval = this.minTickInterval,\n        snapArray = this.snapArray;\n\n    if (tickCount === 1) {\n      throw new Error('linear scale\\'tickCount should not be 1');\n    }\n\n    if (max < min) {\n      throw new Error(\"max: \" + max + \" should not be less than min: \" + min);\n    }\n\n    var tmp = numberAuto({\n      min: min,\n      max: max,\n      minLimit: minLimit,\n      maxLimit: maxLimit,\n      minCount: tickCount,\n      maxCount: tickCount,\n      interval: tickInterval,\n      minTickInterval: minTickInterval,\n      snapArray: snapArray\n    });\n    return tmp.ticks;\n  } // 初始化ticks\n  ;\n\n  _proto.initTicks = function initTicks() {\n    var self = this;\n    var calTicks = self.calculateTicks();\n\n    if (self.nice) {\n      // 如果需要优化显示的tick\n      self.ticks = calTicks;\n      self.min = calTicks[0];\n      self.max = calTicks[calTicks.length - 1];\n    } else {\n      var ticks = [];\n      each(calTicks, function (tick) {\n        if (tick >= self.min && tick <= self.max) {\n          ticks.push(tick);\n        }\n      }); // 如果 ticks 为空，直接输入最小值、最大值\n\n      if (!ticks.length) {\n        ticks.push(self.min);\n        ticks.push(self.max);\n      }\n\n      self.ticks = ticks;\n    }\n  }\n  /**\n   * @override\n   */\n  ;\n\n  _proto.scale = function scale(value) {\n    if (isNil(value)) {\n      return NaN;\n    }\n\n    var max = this.max;\n    var min = this.min;\n\n    if (max === min) {\n      return 0;\n    }\n\n    var percent = (value - min) / (max - min);\n    var rangeMin = this.rangeMin();\n    var rangeMax = this.rangeMax();\n    return rangeMin + percent * (rangeMax - rangeMin);\n  }\n  /**\n   * @override\n   */\n  ;\n\n  _proto.invert = function invert(value) {\n    var percent = (value - this.rangeMin()) / (this.rangeMax() - this.rangeMin());\n    return this.min + percent * (this.max - this.min);\n  };\n\n  return Linear;\n}(Base);\n\nBase.Linear = Linear;\nmodule.exports = Linear;","map":{"version":3,"sources":["/home/sunxuming/react-typescript/node_modules/_@antv_scale@0.1.4@@antv/scale/lib/linear.js"],"names":["_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","__proto__","isNil","require","each","Base","numberAuto","Linear","_Base","apply","arguments","_proto","_initDefaultCfg","call","self","type","isLinear","nice","min","minLimit","max","maxLimit","tickCount","tickInterval","minTickInterval","snapArray","init","ticks","translate","initTicks","firstValue","lastValue","length","calculateTicks","Error","tmp","minCount","maxCount","interval","calTicks","tick","push","scale","value","NaN","percent","rangeMin","rangeMax","invert","module","exports"],"mappings":"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","sourcesContent":["function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * @fileOverview The measurement of linear data scale function\n * @author dxq613@gmail.com\n */\nvar isNil = require('@antv/util/lib/type/is-nil');\n\nvar each = require('@antv/util/lib/each');\n\nvar Base = require('./base');\n\nvar numberAuto = require('./auto/number');\n/**\n * 线性度量\n * @class Scale.Linear\n */\n\n\nvar Linear =\n/*#__PURE__*/\nfunction (_Base) {\n  _inheritsLoose(Linear, _Base);\n\n  function Linear() {\n    return _Base.apply(this, arguments) || this;\n  }\n\n  var _proto = Linear.prototype;\n\n  _proto._initDefaultCfg = function _initDefaultCfg() {\n    _Base.prototype._initDefaultCfg.call(this);\n\n    var self = this;\n    self.type = 'linear';\n    self.isLinear = true;\n    /**\n     * 是否为了用户习惯，优化min,max和ticks，如果进行优化，则会根据生成的ticks调整min,max，否则舍弃(min,max)范围之外的ticks\n     * @type {Boolean}\n     * @default false\n     */\n\n    self.nice = false;\n    /**\n     * min value of the scale\n     * @type {Number}\n     * @default null\n     */\n\n    self.min = null;\n    /**\n     * min value limitted of the scale\n     * @type {Number}\n     * @default null\n     */\n\n    self.minLimit = null;\n    /**\n     * max value of the scale\n     * @type {Number}\n     * @default null\n     */\n\n    self.max = null;\n    /**\n     * max value limitted of the scale\n     * @type {Number}\n     * @default null\n     */\n\n    self.maxLimit = null;\n    /**\n     * 自动生成标记时的个数\n     * @type {Number}\n     * @default null\n     */\n\n    self.tickCount = null;\n    /**\n     * 坐标轴点之间的间距，指的是真实数据的差值\n     * @type {Number}\n     * @default null\n     */\n\n    self.tickInterval = null;\n    /**\n     * 坐标轴点之间的最小间距，指的是真实数据的差值\n     * @type {Number}\n     * @default null\n     */\n\n    self.minTickInterval = null;\n    /**\n     * 用于计算坐标点时逼近的数组\n     * @type {Array}\n     */\n\n    self.snapArray = null;\n  }\n  /**\n   * @protected\n   * @override\n   */\n  ;\n\n  _proto.init = function init() {\n    var self = this;\n\n    if (!self.ticks) {\n      self.min = self.translate(self.min);\n      self.max = self.translate(self.max);\n      self.initTicks();\n    } else {\n      var ticks = self.ticks;\n      var firstValue = self.translate(ticks[0]);\n      var lastValue = self.translate(ticks[ticks.length - 1]);\n\n      if (isNil(self.min) || self.min > firstValue) {\n        self.min = firstValue;\n      }\n\n      if (isNil(self.max) || self.max < lastValue) {\n        self.max = lastValue;\n      }\n    }\n  }\n  /**\n   * 计算坐标点\n   * @protected\n   * @return {Array} 计算完成的坐标点\n   */\n  ;\n\n  _proto.calculateTicks = function calculateTicks() {\n    var min = this.min,\n        max = this.max,\n        minLimit = this.minLimit,\n        maxLimit = this.maxLimit,\n        tickCount = this.tickCount,\n        tickInterval = this.tickInterval,\n        minTickInterval = this.minTickInterval,\n        snapArray = this.snapArray;\n\n    if (tickCount === 1) {\n      throw new Error('linear scale\\'tickCount should not be 1');\n    }\n\n    if (max < min) {\n      throw new Error(\"max: \" + max + \" should not be less than min: \" + min);\n    }\n\n    var tmp = numberAuto({\n      min: min,\n      max: max,\n      minLimit: minLimit,\n      maxLimit: maxLimit,\n      minCount: tickCount,\n      maxCount: tickCount,\n      interval: tickInterval,\n      minTickInterval: minTickInterval,\n      snapArray: snapArray\n    });\n    return tmp.ticks;\n  } // 初始化ticks\n  ;\n\n  _proto.initTicks = function initTicks() {\n    var self = this;\n    var calTicks = self.calculateTicks();\n\n    if (self.nice) {\n      // 如果需要优化显示的tick\n      self.ticks = calTicks;\n      self.min = calTicks[0];\n      self.max = calTicks[calTicks.length - 1];\n    } else {\n      var ticks = [];\n      each(calTicks, function (tick) {\n        if (tick >= self.min && tick <= self.max) {\n          ticks.push(tick);\n        }\n      }); // 如果 ticks 为空，直接输入最小值、最大值\n\n      if (!ticks.length) {\n        ticks.push(self.min);\n        ticks.push(self.max);\n      }\n\n      self.ticks = ticks;\n    }\n  }\n  /**\n   * @override\n   */\n  ;\n\n  _proto.scale = function scale(value) {\n    if (isNil(value)) {\n      return NaN;\n    }\n\n    var max = this.max;\n    var min = this.min;\n\n    if (max === min) {\n      return 0;\n    }\n\n    var percent = (value - min) / (max - min);\n    var rangeMin = this.rangeMin();\n    var rangeMax = this.rangeMax();\n    return rangeMin + percent * (rangeMax - rangeMin);\n  }\n  /**\n   * @override\n   */\n  ;\n\n  _proto.invert = function invert(value) {\n    var percent = (value - this.rangeMin()) / (this.rangeMax() - this.rangeMin());\n    return this.min + percent * (this.max - this.min);\n  };\n\n  return Linear;\n}(Base);\n\nBase.Linear = Linear;\nmodule.exports = Linear;"]},"metadata":{},"sourceType":"script"}