{"ast":null,"code":"const Util = require('../util/common');\n\nconst Guide = require('../component/guide/base');\n\nconst Global = require('../global'); // register the default configuration for Guide\n\n\nGlobal.guide = Util.deepMix({\n  line: {\n    style: {\n      stroke: '#a3a3a3',\n      lineWidth: 1\n    },\n    top: true\n  },\n  text: {\n    style: {\n      fill: '#787878',\n      textAlign: 'center',\n      textBaseline: 'middle'\n    },\n    offsetX: 0,\n    offsetY: 0,\n    top: true\n  },\n  rect: {\n    style: {\n      fill: '#fafafa'\n    },\n    top: false\n  },\n  arc: {\n    style: {\n      stroke: '#a3a3a3'\n    },\n    top: true\n  },\n  html: {\n    offsetX: 0,\n    offsetY: 0,\n    alignX: 'center',\n    alignY: 'middle'\n  },\n  tag: {\n    top: true,\n    offsetX: 0,\n    offsetY: 0,\n    side: 4,\n    background: {\n      padding: 5,\n      radius: 2,\n      fill: '#1890FF'\n    },\n    textStyle: {\n      fontSize: 12,\n      fill: '#fff',\n      textAlign: 'center',\n      textBaseline: 'middle'\n    }\n  },\n  point: {\n    top: true,\n    offsetX: 0,\n    offsetY: 0,\n    style: {\n      fill: '#fff',\n      r: 3,\n      lineWidth: 2,\n      stroke: '#1890ff'\n    }\n  }\n}, Global.guide || {});\n\nclass GuideController {\n  constructor(cfg) {\n    this.guides = [];\n    this.xScale = null;\n    this.yScales = null;\n    this.guideShapes = [];\n    Util.mix(this, cfg);\n  }\n\n  _toString(position) {\n    if (Util.isFunction(position)) {\n      position = position(this.xScale, this.yScales);\n    }\n\n    position = position.toString();\n    return position;\n  }\n\n  _getId(shape, guide) {\n    let id = guide.id;\n\n    if (!id) {\n      const type = guide.type;\n\n      if (type === 'arc' || type === 'line' || type === 'rect') {\n        id = this._toString(guide.start) + '-' + this._toString(guide.end);\n      } else {\n        id = this._toString(guide.position);\n      }\n    }\n\n    return id;\n  }\n\n  paint(coord) {\n    const self = this;\n    const {\n      chart,\n      guides,\n      xScale,\n      yScales\n    } = self;\n    const guideShapes = [];\n    Util.each(guides, function (guide, idx) {\n      guide.xScale = xScale;\n      guide.yScales = yScales;\n      let container;\n\n      if (guide.type === 'regionFilter') {\n        // TODO: RegionFilter support animation\n        guide.chart = chart;\n      } else {\n        container = guide.top ? self.frontPlot : self.backPlot;\n      }\n\n      guide.coord = coord;\n      guide.container = container;\n      guide.canvas = chart.get('canvas');\n      const shape = guide.render(coord, container);\n\n      if (shape) {\n        const id = self._getId(shape, guide);\n\n        [].concat(shape).forEach(s => {\n          s._id = s.get('className') + '-' + id;\n          s.set('index', idx);\n          guideShapes.push(s);\n        });\n      }\n    });\n    self.guideShapes = guideShapes;\n  }\n\n  clear() {\n    this.reset();\n    this.guides = [];\n    return this;\n  }\n\n  reset() {\n    const guides = this.guides;\n    Util.each(guides, guide => {\n      guide.remove();\n    });\n  }\n\n  _createGuide(type, cfg) {\n    const ClassName = Util.upperFirst(type);\n    const guide = new Guide[ClassName](Util.deepMix({}, Global.guide[type], cfg));\n    this.guides.push(guide);\n    return guide;\n  }\n\n  line(cfg = {}) {\n    return this._createGuide('line', cfg);\n  }\n\n  text(cfg = {}) {\n    return this._createGuide('text', cfg);\n  }\n\n  arc(cfg = {}) {\n    return this._createGuide('arc', cfg);\n  }\n\n  html(cfg = {}) {\n    return this._createGuide('html', cfg);\n  }\n\n  rect(cfg = {}) {\n    return this._createGuide('rect', cfg);\n  }\n\n  tag(cfg = {}) {\n    return this._createGuide('tag', cfg);\n  }\n\n  point(cfg = {}) {\n    return this._createGuide('point', cfg);\n  }\n\n  regionFilter(cfg = {}) {\n    return this._createGuide('regionFilter', cfg);\n  }\n\n}\n\nmodule.exports = {\n  init(chart) {\n    const guideController = new GuideController({\n      frontPlot: chart.get('frontPlot').addGroup({\n        zIndex: 20,\n        className: 'guideContainer'\n      }),\n      backPlot: chart.get('backPlot').addGroup({\n        className: 'guideContainer'\n      })\n    });\n    chart.set('guideController', guideController);\n    /**\n     * 为图表添加 guide\n     * @return {GuideController} 返回 guide 控制器\n     */\n\n    chart.guide = function () {\n      return guideController;\n    };\n  },\n\n  afterGeomDraw(chart) {\n    const guideController = chart.get('guideController');\n\n    if (!guideController.guides.length) {\n      return;\n    }\n\n    const xScale = chart.getXScale();\n    const yScales = chart.getYScales();\n    const coord = chart.get('coord');\n    guideController.xScale = xScale;\n    guideController.yScales = yScales;\n    guideController.chart = chart; // for regionFilter\n\n    guideController.paint(coord);\n  },\n\n  clear(chart) {\n    chart.get('guideController').clear();\n  },\n\n  repaint(chart) {\n    chart.get('guideController').reset();\n  }\n\n};","map":{"version":3,"sources":["/home/sunxuming/react-typescript/node_modules/_@antv_f2@3.6.0-alpha.2@@antv/f2/src/plugin/guide.js"],"names":["Util","require","Guide","Global","guide","deepMix","line","style","stroke","lineWidth","top","text","fill","textAlign","textBaseline","offsetX","offsetY","rect","arc","html","alignX","alignY","tag","side","background","padding","radius","textStyle","fontSize","point","r","GuideController","constructor","cfg","guides","xScale","yScales","guideShapes","mix","_toString","position","isFunction","toString","_getId","shape","id","type","start","end","paint","coord","self","chart","each","idx","container","frontPlot","backPlot","canvas","get","render","concat","forEach","s","_id","set","push","clear","reset","remove","_createGuide","ClassName","upperFirst","regionFilter","module","exports","init","guideController","addGroup","zIndex","className","afterGeomDraw","length","getXScale","getYScales","repaint"],"mappings":"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","sourcesContent":["const Util = require('../util/common');\nconst Guide = require('../component/guide/base');\nconst Global = require('../global');\n\n// register the default configuration for Guide\nGlobal.guide = Util.deepMix({\n  line: {\n    style: {\n      stroke: '#a3a3a3',\n      lineWidth: 1\n    },\n    top: true\n  },\n  text: {\n    style: {\n      fill: '#787878',\n      textAlign: 'center',\n      textBaseline: 'middle'\n    },\n    offsetX: 0,\n    offsetY: 0,\n    top: true\n  },\n  rect: {\n    style: {\n      fill: '#fafafa'\n    },\n    top: false\n  },\n  arc: {\n    style: {\n      stroke: '#a3a3a3'\n    },\n    top: true\n  },\n  html: {\n    offsetX: 0,\n    offsetY: 0,\n    alignX: 'center',\n    alignY: 'middle'\n  },\n  tag: {\n    top: true,\n    offsetX: 0,\n    offsetY: 0,\n    side: 4,\n    background: {\n      padding: 5,\n      radius: 2,\n      fill: '#1890FF'\n    },\n    textStyle: {\n      fontSize: 12,\n      fill: '#fff',\n      textAlign: 'center',\n      textBaseline: 'middle'\n    }\n  },\n  point: {\n    top: true,\n    offsetX: 0,\n    offsetY: 0,\n    style: {\n      fill: '#fff',\n      r: 3,\n      lineWidth: 2,\n      stroke: '#1890ff'\n    }\n  }\n}, Global.guide || {});\n\nclass GuideController {\n  constructor(cfg) {\n    this.guides = [];\n    this.xScale = null;\n    this.yScales = null;\n    this.guideShapes = [];\n    Util.mix(this, cfg);\n  }\n\n  _toString(position) {\n    if (Util.isFunction(position)) {\n      position = position(this.xScale, this.yScales);\n    }\n    position = position.toString();\n    return position;\n  }\n\n  _getId(shape, guide) {\n    let id = guide.id;\n    if (!id) {\n      const type = guide.type;\n      if (type === 'arc' || type === 'line' || type === 'rect') {\n        id = this._toString(guide.start) + '-' + this._toString(guide.end);\n      } else {\n        id = this._toString(guide.position);\n      }\n    }\n\n    return id;\n  }\n\n  paint(coord) {\n    const self = this;\n    const { chart, guides, xScale, yScales } = self;\n    const guideShapes = [];\n    Util.each(guides, function(guide, idx) {\n      guide.xScale = xScale;\n      guide.yScales = yScales;\n      let container;\n      if (guide.type === 'regionFilter') { // TODO: RegionFilter support animation\n        guide.chart = chart;\n      } else {\n        container = guide.top ? self.frontPlot : self.backPlot;\n      }\n      guide.coord = coord;\n      guide.container = container;\n      guide.canvas = chart.get('canvas');\n      const shape = guide.render(coord, container);\n      if (shape) {\n        const id = self._getId(shape, guide);\n        [].concat(shape).forEach(s => {\n          s._id = s.get('className') + '-' + id;\n          s.set('index', idx);\n          guideShapes.push(s);\n        });\n      }\n    });\n    self.guideShapes = guideShapes;\n  }\n\n  clear() {\n    this.reset();\n    this.guides = [];\n    return this;\n  }\n\n  reset() {\n    const guides = this.guides;\n    Util.each(guides, guide => {\n      guide.remove();\n    });\n  }\n  _createGuide(type, cfg) {\n    const ClassName = Util.upperFirst(type);\n    const guide = new Guide[ClassName](Util.deepMix({}, Global.guide[type], cfg));\n    this.guides.push(guide);\n    return guide;\n  }\n\n  line(cfg = {}) {\n    return this._createGuide('line', cfg);\n  }\n\n  text(cfg = {}) {\n    return this._createGuide('text', cfg);\n  }\n\n  arc(cfg = {}) {\n    return this._createGuide('arc', cfg);\n  }\n\n  html(cfg = {}) {\n    return this._createGuide('html', cfg);\n  }\n\n  rect(cfg = {}) {\n    return this._createGuide('rect', cfg);\n  }\n\n  tag(cfg = {}) {\n    return this._createGuide('tag', cfg);\n  }\n\n  point(cfg = {}) {\n    return this._createGuide('point', cfg);\n  }\n\n  regionFilter(cfg = {}) {\n    return this._createGuide('regionFilter', cfg);\n  }\n}\n\nmodule.exports = {\n  init(chart) {\n    const guideController = new GuideController({\n      frontPlot: chart.get('frontPlot').addGroup({\n        zIndex: 20,\n        className: 'guideContainer'\n      }),\n      backPlot: chart.get('backPlot').addGroup({\n        className: 'guideContainer'\n      })\n    });\n    chart.set('guideController', guideController);\n    /**\n     * 为图表添加 guide\n     * @return {GuideController} 返回 guide 控制器\n     */\n    chart.guide = function() {\n      return guideController;\n    };\n  },\n  afterGeomDraw(chart) {\n    const guideController = chart.get('guideController');\n    if (!guideController.guides.length) {\n      return;\n    }\n    const xScale = chart.getXScale();\n    const yScales = chart.getYScales();\n    const coord = chart.get('coord');\n    guideController.xScale = xScale;\n    guideController.yScales = yScales;\n    guideController.chart = chart; // for regionFilter\n    guideController.paint(coord);\n  },\n  clear(chart) {\n    chart.get('guideController').clear();\n  },\n  repaint(chart) {\n    chart.get('guideController').reset();\n  }\n};\n"]},"metadata":{},"sourceType":"script"}